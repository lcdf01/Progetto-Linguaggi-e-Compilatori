-----------------------------------------------------------------------------
Info file generated by Happy Version 2.1.5 from ParGrammatica.y
-----------------------------------------------------------------------------

state 100 contains 1 shift/reduce conflicts.
state 174 contains 14 reduce/reduce conflicts.
state 186 contains 1 shift/reduce conflicts.

rule 92 is unused
rule 93 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	%start_pStmt -> Stmt                               (1)
	%start_pRExpr -> RExpr                             (2)
	%start_pLExpr -> LExpr                             (3)
	Ident -> L_Ident                                   (4)
	Char -> L_charac                                   (5)
	Double -> L_doubl                                  (6)
	Integer -> L_integ                                 (7)
	String -> L_quoted                                 (8)
	Boolean -> 'true'                                  (9)
	Boolean -> 'false'                                 (10)
	RExpr -> RExpr1                                    (11)
	RExpr -> RExpr '||' RExpr1                         (12)
	RExpr1 -> RExpr2                                   (13)
	RExpr1 -> RExpr1 '&&' RExpr2                       (14)
	RExpr2 -> RExpr3                                   (15)
	RExpr2 -> '!' RExpr3                               (16)
	RExpr3 -> RExpr4                                   (17)
	RExpr3 -> RExpr4 '==' RExpr4                       (18)
	RExpr3 -> RExpr4 '!=' RExpr4                       (19)
	RExpr3 -> RExpr4 '<' RExpr4                        (20)
	RExpr3 -> RExpr4 '<=' RExpr4                       (21)
	RExpr3 -> RExpr4 '>' RExpr4                        (22)
	RExpr3 -> RExpr4 '>=' RExpr4                       (23)
	RExpr4 -> RExpr5                                   (24)
	RExpr4 -> RExpr4 '+' RExpr5                        (25)
	RExpr4 -> RExpr4 '-' RExpr5                        (26)
	RExpr5 -> RExpr6                                   (27)
	RExpr5 -> RExpr5 '*' RExpr6                        (28)
	RExpr5 -> RExpr5 '/' RExpr6                        (29)
	RExpr5 -> RExpr5 '%' RExpr6                        (30)
	RExpr6 -> RExpr7                                   (31)
	RExpr6 -> RExpr7 '^' RExpr6                        (32)
	RExpr7 -> RExpr8                                   (33)
	RExpr7 -> '-' RExpr8                               (34)
	RExpr7 -> '&' LExpr                                (35)
	RExpr8 -> RExpr9                                   (36)
	RExpr8 -> FunCall                                  (37)
	RExpr9 -> RExpr10                                  (38)
	RExpr9 -> Integer                                  (39)
	RExpr9 -> Char                                     (40)
	RExpr9 -> String                                   (41)
	RExpr9 -> Double                                   (42)
	RExpr9 -> Boolean                                  (43)
	RExpr9 -> '[' Integer ']' BasicType '{' ListRExpr '}'   (44)
	RExpr10 -> RExpr11                                 (45)
	RExpr11 -> RExpr12                                 (46)
	RExpr12 -> '(' RExpr ')'                           (47)
	RExpr12 -> LExpr                                   (48)
	FunCall -> Ident '(' ListRExpr ')'                 (49)
	ListRExpr ->                                       (50)
	ListRExpr -> RExpr                                 (51)
	ListRExpr -> RExpr ',' ListRExpr                   (52)
	LExpr -> LExpr1                                    (53)
	LExpr -> '*' RExpr9                                (54)
	LExpr1 -> LExpr2                                   (55)
	LExpr1 -> '++' LExpr2                              (56)
	LExpr1 -> '--' LExpr2                              (57)
	LExpr2 -> LExpr3                                   (58)
	LExpr2 -> LExpr3 '++'                              (59)
	LExpr2 -> LExpr3 '--'                              (60)
	LExpr2 -> BLExpr                                   (61)
	LExpr3 -> '(' LExpr ')'                            (62)
	BLExpr -> Ident '[' RExpr ']'                      (63)
	BLExpr -> Ident                                    (64)
	Program -> ListDecl                                (65)
	ListDecl ->                                        (66)
	ListDecl -> Decl ListDecl                          (67)
	Decl -> 'func' Ident '(' ListParameter ')' CompStmt   (68)
	Decl -> 'var' VarSpec ';'                          (69)
	ListParameter ->                                   (70)
	ListParameter -> Parameter                         (71)
	ListParameter -> Parameter ',' ListParameter       (72)
	Parameter -> 'var' Ident TypeSpec                  (73)
	VarSpec -> Ident TypeSpec '=' RExpr                (74)
	VarSpec -> Ident '=' RExpr                         (75)
	VarSpec -> Ident TypeSpec                          (76)
	TypeSpec -> BasicType                              (77)
	TypeSpec -> CompoundType                           (78)
	BasicType -> 'bool'                                (79)
	BasicType -> 'char'                                (80)
	BasicType -> 'float'                               (81)
	BasicType -> 'int'                                 (82)
	BasicType -> 'string'                              (83)
	CompoundType -> '[' Integer ']' TypeSpec           (84)
	CompoundType -> '[' ']' TypeSpec                   (85)
	CompoundType -> '*' TypeSpec                       (86)
	CompStmt -> '{' ListBlockItem '}'                  (87)
	ListBlockItem ->                                   (88)
	ListBlockItem -> BlockItem ListBlockItem           (89)
	BlockItem -> Decl                                  (90)
	BlockItem -> Stmt                                  (91)
	ListStmt ->                                        (92)
	ListStmt -> Stmt ListStmt                          (93)
	Stmt -> CompStmt                                   (94)
	Stmt -> FunCall ';'                                (95)
	Stmt -> JumpStmt ';'                               (96)
	Stmt -> IterStmt                                   (97)
	Stmt -> SelectionStmt                              (98)
	Stmt -> LExpr Assignment_op RExpr ';'              (99)
	Stmt -> LExpr ';'                                  (100)
	Stmt -> 'var' VarSpec ';'                          (101)
	Stmt -> Ident '++' ';'                             (102)
	Stmt -> Ident '--' ';'                             (103)
	Assignment_op -> '='                               (104)
	Assignment_op -> '*='                              (105)
	Assignment_op -> '+='                              (106)
	Assignment_op -> '/='                              (107)
	Assignment_op -> '-='                              (108)
	Assignment_op -> '^='                              (109)
	Assignment_op -> '&='                              (110)
	Assignment_op -> '|='                              (111)
	JumpStmt -> 'break'                                (112)
	JumpStmt -> 'continue'                             (113)
	SelectionStmt -> 'if' '(' RExpr ')' Stmt           (114)
	SelectionStmt -> 'if' '(' RExpr ')' Stmt 'else' Stmt   (115)
	IterStmt -> 'while' '(' RExpr ')' Stmt             (116)
	IterStmt -> 'do' Stmt 'while' '(' RExpr ')' ';'    (117)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'&='           { PT _ (TS _ 6) }
	'('            { PT _ (TS _ 7) }
	')'            { PT _ (TS _ 8) }
	'*'            { PT _ (TS _ 9) }
	'*='           { PT _ (TS _ 10) }
	'+'            { PT _ (TS _ 11) }
	'++'           { PT _ (TS _ 12) }
	'+='           { PT _ (TS _ 13) }
	','            { PT _ (TS _ 14) }
	'-'            { PT _ (TS _ 15) }
	'--'           { PT _ (TS _ 16) }
	'-='           { PT _ (TS _ 17) }
	'/'            { PT _ (TS _ 18) }
	'/='           { PT _ (TS _ 19) }
	';'            { PT _ (TS _ 20) }
	'<'            { PT _ (TS _ 21) }
	'<='           { PT _ (TS _ 22) }
	'='            { PT _ (TS _ 23) }
	'=='           { PT _ (TS _ 24) }
	'>'            { PT _ (TS _ 25) }
	'>='           { PT _ (TS _ 26) }
	'['            { PT _ (TS _ 27) }
	']'            { PT _ (TS _ 28) }
	'^'            { PT _ (TS _ 29) }
	'^='           { PT _ (TS _ 30) }
	'bool'         { PT _ (TS _ 31) }
	'break'        { PT _ (TS _ 32) }
	'char'         { PT _ (TS _ 33) }
	'continue'     { PT _ (TS _ 34) }
	'do'           { PT _ (TS _ 35) }
	'else'         { PT _ (TS _ 36) }
	'false'        { PT _ (TS _ 37) }
	'float'        { PT _ (TS _ 38) }
	'func'         { PT _ (TS _ 39) }
	'if'           { PT _ (TS _ 40) }
	'int'          { PT _ (TS _ 41) }
	'string'       { PT _ (TS _ 42) }
	'true'         { PT _ (TS _ 43) }
	'var'          { PT _ (TS _ 44) }
	'while'        { PT _ (TS _ 45) }
	'{'            { PT _ (TS _ 46) }
	'|='           { PT _ (TS _ 47) }
	'||'           { PT _ (TS _ 48) }
	'}'            { PT _ (TS _ 49) }
	L_Ident        { PT _ (TV $$) }
	L_charac       { PT _ (TC $$) }
	L_doubl        { PT _ (TD $$) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	%start_pStmt    rule  1
	%start_pRExpr   rule  2
	%start_pLExpr   rule  3
	Ident           rule  4
	Char            rule  5
	Double          rule  6
	Integer         rule  7
	String          rule  8
	Boolean         rules 9, 10
	RExpr           rules 11, 12
	RExpr1          rules 13, 14
	RExpr2          rules 15, 16
	RExpr3          rules 17, 18, 19, 20, 21, 22, 23
	RExpr4          rules 24, 25, 26
	RExpr5          rules 27, 28, 29, 30
	RExpr6          rules 31, 32
	RExpr7          rules 33, 34, 35
	RExpr8          rules 36, 37
	RExpr9          rules 38, 39, 40, 41, 42, 43, 44
	RExpr10         rule  45
	RExpr11         rule  46
	RExpr12         rules 47, 48
	FunCall         rule  49
	ListRExpr       rules 50, 51, 52
	LExpr           rules 53, 54
	LExpr1          rules 55, 56, 57
	LExpr2          rules 58, 59, 60, 61
	LExpr3          rule  62
	BLExpr          rules 63, 64
	Program         rule  65
	ListDecl        rules 66, 67
	Decl            rules 68, 69
	ListParameter   rules 70, 71, 72
	Parameter       rule  73
	VarSpec         rules 74, 75, 76
	TypeSpec        rules 77, 78
	BasicType       rules 79, 80, 81, 82, 83
	CompoundType    rules 84, 85, 86
	CompStmt        rule  87
	ListBlockItem   rules 88, 89
	BlockItem       rules 90, 91
	ListStmt        rules 92, 93
	Stmt            rules 94, 95, 96, 97, 98, 99, 100, 101, 102, 103
	Assignment_op   rules 104, 105, 106, 107, 108, 109, 110, 111
	JumpStmt        rules 112, 113
	SelectionStmt   rules 114, 115
	IterStmt        rules 116, 117

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram -> . Program                        (rule 0)

	'func'         shift, and enter state 66
	'var'          shift, and enter state 67
	%eof           reduce using rule 66

	Program        goto state 63
	ListDecl       goto state 64
	Decl           goto state 65

State 1

	%start_pStmt -> . Stmt                              (rule 1)

	'('            shift, and enter state 12
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'--'           shift, and enter state 15
	'break'        shift, and enter state 56
	'continue'     shift, and enter state 57
	'do'           shift, and enter state 58
	'if'           shift, and enter state 59
	'var'          shift, and enter state 60
	'while'        shift, and enter state 61
	'{'            shift, and enter state 62
	L_Ident        shift, and enter state 5

	Ident          goto state 48
	FunCall        goto state 49
	LExpr          goto state 50
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11
	CompStmt       goto state 51
	Stmt           goto state 52
	JumpStmt       goto state 53
	SelectionStmt  goto state 54
	IterStmt       goto state 55

State 2

	%start_pRExpr -> . RExpr                            (rule 2)

	'!'            shift, and enter state 37
	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'-'            shift, and enter state 40
	'--'           shift, and enter state 15
	'['            shift, and enter state 41
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 16
	Char           goto state 17
	Double         goto state 18
	Integer        goto state 19
	String         goto state 20
	Boolean        goto state 21
	RExpr          goto state 22
	RExpr1         goto state 23
	RExpr2         goto state 24
	RExpr3         goto state 25
	RExpr4         goto state 26
	RExpr5         goto state 27
	RExpr6         goto state 28
	RExpr7         goto state 29
	RExpr8         goto state 30
	RExpr9         goto state 31
	RExpr10        goto state 32
	RExpr11        goto state 33
	RExpr12        goto state 34
	FunCall        goto state 35
	LExpr          goto state 36
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11

State 3

	%start_pLExpr -> . LExpr                            (rule 3)

	'('            shift, and enter state 12
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'--'           shift, and enter state 15
	L_Ident        shift, and enter state 5

	Ident          goto state 6
	LExpr          goto state 7
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11

State 4

	Ident -> . L_Ident                                  (rule 4)

	L_Ident        shift, and enter state 5


State 5

	Ident -> L_Ident .                                  (rule 4)

	'!='           reduce using rule 4
	'%'            reduce using rule 4
	'&&'           reduce using rule 4
	'&='           reduce using rule 4
	'('            reduce using rule 4
	')'            reduce using rule 4
	'*'            reduce using rule 4
	'*='           reduce using rule 4
	'+'            reduce using rule 4
	'++'           reduce using rule 4
	'+='           reduce using rule 4
	','            reduce using rule 4
	'-'            reduce using rule 4
	'--'           reduce using rule 4
	'-='           reduce using rule 4
	'/'            reduce using rule 4
	'/='           reduce using rule 4
	';'            reduce using rule 4
	'<'            reduce using rule 4
	'<='           reduce using rule 4
	'='            reduce using rule 4
	'=='           reduce using rule 4
	'>'            reduce using rule 4
	'>='           reduce using rule 4
	'['            reduce using rule 4
	']'            reduce using rule 4
	'^'            reduce using rule 4
	'^='           reduce using rule 4
	'bool'         reduce using rule 4
	'char'         reduce using rule 4
	'float'        reduce using rule 4
	'int'          reduce using rule 4
	'string'       reduce using rule 4
	'|='           reduce using rule 4
	'||'           reduce using rule 4
	'}'            reduce using rule 4
	%eof           reduce using rule 4


State 6

	BLExpr -> Ident . '[' RExpr ']'                     (rule 63)
	BLExpr -> Ident .                                   (rule 64)

	'!='           reduce using rule 64
	'%'            reduce using rule 64
	'&&'           reduce using rule 64
	'&='           reduce using rule 64
	')'            reduce using rule 64
	'*'            reduce using rule 64
	'*='           reduce using rule 64
	'+'            reduce using rule 64
	'+='           reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'-='           reduce using rule 64
	'/'            reduce using rule 64
	'/='           reduce using rule 64
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'='            reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	'['            shift, and enter state 96
	']'            reduce using rule 64
	'^'            reduce using rule 64
	'^='           reduce using rule 64
	'|='           reduce using rule 64
	'||'           reduce using rule 64
	'}'            reduce using rule 64
	%eof           reduce using rule 64


State 7

	%start_pLExpr -> LExpr .                            (rule 3)

	%eof           accept


State 8

	LExpr -> LExpr1 .                                   (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	'&='           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'*='           reduce using rule 53
	'+'            reduce using rule 53
	'+='           reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'-='           reduce using rule 53
	'/'            reduce using rule 53
	'/='           reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'='            reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	']'            reduce using rule 53
	'^'            reduce using rule 53
	'^='           reduce using rule 53
	'|='           reduce using rule 53
	'||'           reduce using rule 53
	'}'            reduce using rule 53
	%eof           reduce using rule 53


State 9

	LExpr1 -> LExpr2 .                                  (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	'&='           reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'*='           reduce using rule 55
	'+'            reduce using rule 55
	'+='           reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'-='           reduce using rule 55
	'/'            reduce using rule 55
	'/='           reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'='            reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	']'            reduce using rule 55
	'^'            reduce using rule 55
	'^='           reduce using rule 55
	'|='           reduce using rule 55
	'||'           reduce using rule 55
	'}'            reduce using rule 55
	%eof           reduce using rule 55


State 10

	LExpr2 -> LExpr3 .                                  (rule 58)
	LExpr2 -> LExpr3 . '++'                             (rule 59)
	LExpr2 -> LExpr3 . '--'                             (rule 60)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	'&='           reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'*='           reduce using rule 58
	'+'            reduce using rule 58
	'++'           shift, and enter state 121
	'+='           reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'--'           shift, and enter state 122
	'-='           reduce using rule 58
	'/'            reduce using rule 58
	'/='           reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'='            reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	']'            reduce using rule 58
	'^'            reduce using rule 58
	'^='           reduce using rule 58
	'|='           reduce using rule 58
	'||'           reduce using rule 58
	'}'            reduce using rule 58
	%eof           reduce using rule 58


State 11

	LExpr2 -> BLExpr .                                  (rule 61)

	'!='           reduce using rule 61
	'%'            reduce using rule 61
	'&&'           reduce using rule 61
	'&='           reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'*='           reduce using rule 61
	'+'            reduce using rule 61
	'+='           reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'-='           reduce using rule 61
	'/'            reduce using rule 61
	'/='           reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'='            reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	']'            reduce using rule 61
	'^'            reduce using rule 61
	'^='           reduce using rule 61
	'|='           reduce using rule 61
	'||'           reduce using rule 61
	'}'            reduce using rule 61
	%eof           reduce using rule 61


State 12

	LExpr3 -> '(' . LExpr ')'                           (rule 62)

	'('            shift, and enter state 12
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'--'           shift, and enter state 15
	L_Ident        shift, and enter state 5

	Ident          goto state 6
	LExpr          goto state 120
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11

State 13

	LExpr -> '*' . RExpr9                               (rule 54)

	'('            shift, and enter state 39
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'--'           shift, and enter state 15
	'['            shift, and enter state 41
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 6
	Char           goto state 17
	Double         goto state 18
	Integer        goto state 19
	String         goto state 20
	Boolean        goto state 21
	RExpr9         goto state 119
	RExpr10        goto state 32
	RExpr11        goto state 33
	RExpr12        goto state 34
	LExpr          goto state 36
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11

State 14

	LExpr1 -> '++' . LExpr2                             (rule 56)

	'('            shift, and enter state 12
	L_Ident        shift, and enter state 5

	Ident          goto state 6
	LExpr2         goto state 118
	LExpr3         goto state 10
	BLExpr         goto state 11

State 15

	LExpr1 -> '--' . LExpr2                             (rule 57)

	'('            shift, and enter state 12
	L_Ident        shift, and enter state 5

	Ident          goto state 6
	LExpr2         goto state 117
	LExpr3         goto state 10
	BLExpr         goto state 11

State 16

	FunCall -> Ident . '(' ListRExpr ')'                (rule 49)
	BLExpr -> Ident . '[' RExpr ']'                     (rule 63)
	BLExpr -> Ident .                                   (rule 64)

	'!='           reduce using rule 64
	'%'            reduce using rule 64
	'&&'           reduce using rule 64
	'('            shift, and enter state 93
	')'            reduce using rule 64
	'*'            reduce using rule 64
	'+'            reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'/'            reduce using rule 64
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	'['            shift, and enter state 96
	']'            reduce using rule 64
	'^'            reduce using rule 64
	'||'           reduce using rule 64
	'}'            reduce using rule 64
	%eof           reduce using rule 64


State 17

	RExpr9 -> Char .                                    (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	'&='           reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'*='           reduce using rule 40
	'+'            reduce using rule 40
	'+='           reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'-='           reduce using rule 40
	'/'            reduce using rule 40
	'/='           reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'='            reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	']'            reduce using rule 40
	'^'            reduce using rule 40
	'^='           reduce using rule 40
	'|='           reduce using rule 40
	'||'           reduce using rule 40
	'}'            reduce using rule 40
	%eof           reduce using rule 40


State 18

	RExpr9 -> Double .                                  (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	'&='           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'*='           reduce using rule 42
	'+'            reduce using rule 42
	'+='           reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'-='           reduce using rule 42
	'/'            reduce using rule 42
	'/='           reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'='            reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	']'            reduce using rule 42
	'^'            reduce using rule 42
	'^='           reduce using rule 42
	'|='           reduce using rule 42
	'||'           reduce using rule 42
	'}'            reduce using rule 42
	%eof           reduce using rule 42


State 19

	RExpr9 -> Integer .                                 (rule 39)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	'&='           reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'*='           reduce using rule 39
	'+'            reduce using rule 39
	'+='           reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'-='           reduce using rule 39
	'/'            reduce using rule 39
	'/='           reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'='            reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	']'            reduce using rule 39
	'^'            reduce using rule 39
	'^='           reduce using rule 39
	'|='           reduce using rule 39
	'||'           reduce using rule 39
	'}'            reduce using rule 39
	%eof           reduce using rule 39


State 20

	RExpr9 -> String .                                  (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	'&='           reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'*='           reduce using rule 41
	'+'            reduce using rule 41
	'+='           reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'-='           reduce using rule 41
	'/'            reduce using rule 41
	'/='           reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'='            reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	']'            reduce using rule 41
	'^'            reduce using rule 41
	'^='           reduce using rule 41
	'|='           reduce using rule 41
	'||'           reduce using rule 41
	'}'            reduce using rule 41
	%eof           reduce using rule 41


State 21

	RExpr9 -> Boolean .                                 (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	'&='           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'*='           reduce using rule 43
	'+'            reduce using rule 43
	'+='           reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'-='           reduce using rule 43
	'/'            reduce using rule 43
	'/='           reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'='            reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	']'            reduce using rule 43
	'^'            reduce using rule 43
	'^='           reduce using rule 43
	'|='           reduce using rule 43
	'||'           reduce using rule 43
	'}'            reduce using rule 43
	%eof           reduce using rule 43


State 22

	%start_pRExpr -> RExpr .                            (rule 2)
	RExpr -> RExpr . '||' RExpr1                        (rule 12)

	'||'           shift, and enter state 116
	%eof           accept


State 23

	RExpr -> RExpr1 .                                   (rule 11)
	RExpr1 -> RExpr1 . '&&' RExpr2                      (rule 14)

	'&&'           shift, and enter state 115
	')'            reduce using rule 11
	','            reduce using rule 11
	';'            reduce using rule 11
	']'            reduce using rule 11
	'||'           reduce using rule 11
	'}'            reduce using rule 11
	%eof           reduce using rule 11


State 24

	RExpr1 -> RExpr2 .                                  (rule 13)

	'&&'           reduce using rule 13
	')'            reduce using rule 13
	','            reduce using rule 13
	';'            reduce using rule 13
	']'            reduce using rule 13
	'||'           reduce using rule 13
	'}'            reduce using rule 13
	%eof           reduce using rule 13


State 25

	RExpr2 -> RExpr3 .                                  (rule 15)

	'&&'           reduce using rule 15
	')'            reduce using rule 15
	','            reduce using rule 15
	';'            reduce using rule 15
	']'            reduce using rule 15
	'||'           reduce using rule 15
	'}'            reduce using rule 15
	%eof           reduce using rule 15


State 26

	RExpr3 -> RExpr4 .                                  (rule 17)
	RExpr3 -> RExpr4 . '==' RExpr4                      (rule 18)
	RExpr3 -> RExpr4 . '!=' RExpr4                      (rule 19)
	RExpr3 -> RExpr4 . '<' RExpr4                       (rule 20)
	RExpr3 -> RExpr4 . '<=' RExpr4                      (rule 21)
	RExpr3 -> RExpr4 . '>' RExpr4                       (rule 22)
	RExpr3 -> RExpr4 . '>=' RExpr4                      (rule 23)
	RExpr4 -> RExpr4 . '+' RExpr5                       (rule 25)
	RExpr4 -> RExpr4 . '-' RExpr5                       (rule 26)

	'!='           shift, and enter state 107
	'&&'           reduce using rule 17
	')'            reduce using rule 17
	'+'            shift, and enter state 108
	','            reduce using rule 17
	'-'            shift, and enter state 109
	';'            reduce using rule 17
	'<'            shift, and enter state 110
	'<='           shift, and enter state 111
	'=='           shift, and enter state 112
	'>'            shift, and enter state 113
	'>='           shift, and enter state 114
	']'            reduce using rule 17
	'||'           reduce using rule 17
	'}'            reduce using rule 17
	%eof           reduce using rule 17


State 27

	RExpr4 -> RExpr5 .                                  (rule 24)
	RExpr5 -> RExpr5 . '*' RExpr6                       (rule 28)
	RExpr5 -> RExpr5 . '/' RExpr6                       (rule 29)
	RExpr5 -> RExpr5 . '%' RExpr6                       (rule 30)

	'!='           reduce using rule 24
	'%'            shift, and enter state 104
	'&&'           reduce using rule 24
	')'            reduce using rule 24
	'*'            shift, and enter state 105
	'+'            reduce using rule 24
	','            reduce using rule 24
	'-'            reduce using rule 24
	'/'            shift, and enter state 106
	';'            reduce using rule 24
	'<'            reduce using rule 24
	'<='           reduce using rule 24
	'=='           reduce using rule 24
	'>'            reduce using rule 24
	'>='           reduce using rule 24
	']'            reduce using rule 24
	'||'           reduce using rule 24
	'}'            reduce using rule 24
	%eof           reduce using rule 24


State 28

	RExpr5 -> RExpr6 .                                  (rule 27)

	'!='           reduce using rule 27
	'%'            reduce using rule 27
	'&&'           reduce using rule 27
	')'            reduce using rule 27
	'*'            reduce using rule 27
	'+'            reduce using rule 27
	','            reduce using rule 27
	'-'            reduce using rule 27
	'/'            reduce using rule 27
	';'            reduce using rule 27
	'<'            reduce using rule 27
	'<='           reduce using rule 27
	'=='           reduce using rule 27
	'>'            reduce using rule 27
	'>='           reduce using rule 27
	']'            reduce using rule 27
	'||'           reduce using rule 27
	'}'            reduce using rule 27
	%eof           reduce using rule 27


State 29

	RExpr6 -> RExpr7 .                                  (rule 31)
	RExpr6 -> RExpr7 . '^' RExpr6                       (rule 32)

	'!='           reduce using rule 31
	'%'            reduce using rule 31
	'&&'           reduce using rule 31
	')'            reduce using rule 31
	'*'            reduce using rule 31
	'+'            reduce using rule 31
	','            reduce using rule 31
	'-'            reduce using rule 31
	'/'            reduce using rule 31
	';'            reduce using rule 31
	'<'            reduce using rule 31
	'<='           reduce using rule 31
	'=='           reduce using rule 31
	'>'            reduce using rule 31
	'>='           reduce using rule 31
	']'            reduce using rule 31
	'^'            shift, and enter state 103
	'||'           reduce using rule 31
	'}'            reduce using rule 31
	%eof           reduce using rule 31


State 30

	RExpr7 -> RExpr8 .                                  (rule 33)

	'!='           reduce using rule 33
	'%'            reduce using rule 33
	'&&'           reduce using rule 33
	')'            reduce using rule 33
	'*'            reduce using rule 33
	'+'            reduce using rule 33
	','            reduce using rule 33
	'-'            reduce using rule 33
	'/'            reduce using rule 33
	';'            reduce using rule 33
	'<'            reduce using rule 33
	'<='           reduce using rule 33
	'=='           reduce using rule 33
	'>'            reduce using rule 33
	'>='           reduce using rule 33
	']'            reduce using rule 33
	'^'            reduce using rule 33
	'||'           reduce using rule 33
	'}'            reduce using rule 33
	%eof           reduce using rule 33


State 31

	RExpr8 -> RExpr9 .                                  (rule 36)

	'!='           reduce using rule 36
	'%'            reduce using rule 36
	'&&'           reduce using rule 36
	')'            reduce using rule 36
	'*'            reduce using rule 36
	'+'            reduce using rule 36
	','            reduce using rule 36
	'-'            reduce using rule 36
	'/'            reduce using rule 36
	';'            reduce using rule 36
	'<'            reduce using rule 36
	'<='           reduce using rule 36
	'=='           reduce using rule 36
	'>'            reduce using rule 36
	'>='           reduce using rule 36
	']'            reduce using rule 36
	'^'            reduce using rule 36
	'||'           reduce using rule 36
	'}'            reduce using rule 36
	%eof           reduce using rule 36


State 32

	RExpr9 -> RExpr10 .                                 (rule 38)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&&'           reduce using rule 38
	'&='           reduce using rule 38
	')'            reduce using rule 38
	'*'            reduce using rule 38
	'*='           reduce using rule 38
	'+'            reduce using rule 38
	'+='           reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'-='           reduce using rule 38
	'/'            reduce using rule 38
	'/='           reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'='            reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	']'            reduce using rule 38
	'^'            reduce using rule 38
	'^='           reduce using rule 38
	'|='           reduce using rule 38
	'||'           reduce using rule 38
	'}'            reduce using rule 38
	%eof           reduce using rule 38


State 33

	RExpr10 -> RExpr11 .                                (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	'&='           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'*='           reduce using rule 45
	'+'            reduce using rule 45
	'+='           reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'-='           reduce using rule 45
	'/'            reduce using rule 45
	'/='           reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'='            reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	']'            reduce using rule 45
	'^'            reduce using rule 45
	'^='           reduce using rule 45
	'|='           reduce using rule 45
	'||'           reduce using rule 45
	'}'            reduce using rule 45
	%eof           reduce using rule 45


State 34

	RExpr11 -> RExpr12 .                                (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	'&='           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'*='           reduce using rule 46
	'+'            reduce using rule 46
	'+='           reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'-='           reduce using rule 46
	'/'            reduce using rule 46
	'/='           reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'='            reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	']'            reduce using rule 46
	'^'            reduce using rule 46
	'^='           reduce using rule 46
	'|='           reduce using rule 46
	'||'           reduce using rule 46
	'}'            reduce using rule 46
	%eof           reduce using rule 46


State 35

	RExpr8 -> FunCall .                                 (rule 37)

	'!='           reduce using rule 37
	'%'            reduce using rule 37
	'&&'           reduce using rule 37
	')'            reduce using rule 37
	'*'            reduce using rule 37
	'+'            reduce using rule 37
	','            reduce using rule 37
	'-'            reduce using rule 37
	'/'            reduce using rule 37
	';'            reduce using rule 37
	'<'            reduce using rule 37
	'<='           reduce using rule 37
	'=='           reduce using rule 37
	'>'            reduce using rule 37
	'>='           reduce using rule 37
	']'            reduce using rule 37
	'^'            reduce using rule 37
	'||'           reduce using rule 37
	'}'            reduce using rule 37
	%eof           reduce using rule 37


State 36

	RExpr12 -> LExpr .                                  (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	'&='           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'*='           reduce using rule 48
	'+'            reduce using rule 48
	'+='           reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'-='           reduce using rule 48
	'/'            reduce using rule 48
	'/='           reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'='            reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	']'            reduce using rule 48
	'^'            reduce using rule 48
	'^='           reduce using rule 48
	'|='           reduce using rule 48
	'||'           reduce using rule 48
	'}'            reduce using rule 48
	%eof           reduce using rule 48


State 37

	RExpr2 -> '!' . RExpr3                              (rule 16)

	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'-'            shift, and enter state 40
	'--'           shift, and enter state 15
	'['            shift, and enter state 41
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 16
	Char           goto state 17
	Double         goto state 18
	Integer        goto state 19
	String         goto state 20
	Boolean        goto state 21
	RExpr3         goto state 102
	RExpr4         goto state 26
	RExpr5         goto state 27
	RExpr6         goto state 28
	RExpr7         goto state 29
	RExpr8         goto state 30
	RExpr9         goto state 31
	RExpr10        goto state 32
	RExpr11        goto state 33
	RExpr12        goto state 34
	FunCall        goto state 35
	LExpr          goto state 36
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11

State 38

	RExpr7 -> '&' . LExpr                               (rule 35)

	'('            shift, and enter state 12
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'--'           shift, and enter state 15
	L_Ident        shift, and enter state 5

	Ident          goto state 6
	LExpr          goto state 101
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11

State 39

	RExpr12 -> '(' . RExpr ')'                          (rule 47)
	LExpr3 -> '(' . LExpr ')'                           (rule 62)

	'!'            shift, and enter state 37
	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'-'            shift, and enter state 40
	'--'           shift, and enter state 15
	'['            shift, and enter state 41
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 16
	Char           goto state 17
	Double         goto state 18
	Integer        goto state 19
	String         goto state 20
	Boolean        goto state 21
	RExpr          goto state 99
	RExpr1         goto state 23
	RExpr2         goto state 24
	RExpr3         goto state 25
	RExpr4         goto state 26
	RExpr5         goto state 27
	RExpr6         goto state 28
	RExpr7         goto state 29
	RExpr8         goto state 30
	RExpr9         goto state 31
	RExpr10        goto state 32
	RExpr11        goto state 33
	RExpr12        goto state 34
	FunCall        goto state 35
	LExpr          goto state 100
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11

State 40

	RExpr7 -> '-' . RExpr8                              (rule 34)

	'('            shift, and enter state 39
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'--'           shift, and enter state 15
	'['            shift, and enter state 41
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 16
	Char           goto state 17
	Double         goto state 18
	Integer        goto state 19
	String         goto state 20
	Boolean        goto state 21
	RExpr8         goto state 98
	RExpr9         goto state 31
	RExpr10        goto state 32
	RExpr11        goto state 33
	RExpr12        goto state 34
	FunCall        goto state 35
	LExpr          goto state 36
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11

State 41

	RExpr9 -> '[' . Integer ']' BasicType '{' ListRExpr '}'    (rule 44)

	L_integ        shift, and enter state 46

	Integer        goto state 97

State 42

	Boolean -> 'false' .                                (rule 10)

	'!='           reduce using rule 10
	'%'            reduce using rule 10
	'&&'           reduce using rule 10
	'&='           reduce using rule 10
	')'            reduce using rule 10
	'*'            reduce using rule 10
	'*='           reduce using rule 10
	'+'            reduce using rule 10
	'+='           reduce using rule 10
	','            reduce using rule 10
	'-'            reduce using rule 10
	'-='           reduce using rule 10
	'/'            reduce using rule 10
	'/='           reduce using rule 10
	';'            reduce using rule 10
	'<'            reduce using rule 10
	'<='           reduce using rule 10
	'='            reduce using rule 10
	'=='           reduce using rule 10
	'>'            reduce using rule 10
	'>='           reduce using rule 10
	']'            reduce using rule 10
	'^'            reduce using rule 10
	'^='           reduce using rule 10
	'|='           reduce using rule 10
	'||'           reduce using rule 10
	'}'            reduce using rule 10
	%eof           reduce using rule 10


State 43

	Boolean -> 'true' .                                 (rule 9)

	'!='           reduce using rule 9
	'%'            reduce using rule 9
	'&&'           reduce using rule 9
	'&='           reduce using rule 9
	')'            reduce using rule 9
	'*'            reduce using rule 9
	'*='           reduce using rule 9
	'+'            reduce using rule 9
	'+='           reduce using rule 9
	','            reduce using rule 9
	'-'            reduce using rule 9
	'-='           reduce using rule 9
	'/'            reduce using rule 9
	'/='           reduce using rule 9
	';'            reduce using rule 9
	'<'            reduce using rule 9
	'<='           reduce using rule 9
	'='            reduce using rule 9
	'=='           reduce using rule 9
	'>'            reduce using rule 9
	'>='           reduce using rule 9
	']'            reduce using rule 9
	'^'            reduce using rule 9
	'^='           reduce using rule 9
	'|='           reduce using rule 9
	'||'           reduce using rule 9
	'}'            reduce using rule 9
	%eof           reduce using rule 9


State 44

	Char -> L_charac .                                  (rule 5)

	'!='           reduce using rule 5
	'%'            reduce using rule 5
	'&&'           reduce using rule 5
	'&='           reduce using rule 5
	')'            reduce using rule 5
	'*'            reduce using rule 5
	'*='           reduce using rule 5
	'+'            reduce using rule 5
	'+='           reduce using rule 5
	','            reduce using rule 5
	'-'            reduce using rule 5
	'-='           reduce using rule 5
	'/'            reduce using rule 5
	'/='           reduce using rule 5
	';'            reduce using rule 5
	'<'            reduce using rule 5
	'<='           reduce using rule 5
	'='            reduce using rule 5
	'=='           reduce using rule 5
	'>'            reduce using rule 5
	'>='           reduce using rule 5
	']'            reduce using rule 5
	'^'            reduce using rule 5
	'^='           reduce using rule 5
	'|='           reduce using rule 5
	'||'           reduce using rule 5
	'}'            reduce using rule 5
	%eof           reduce using rule 5


State 45

	Double -> L_doubl .                                 (rule 6)

	'!='           reduce using rule 6
	'%'            reduce using rule 6
	'&&'           reduce using rule 6
	'&='           reduce using rule 6
	')'            reduce using rule 6
	'*'            reduce using rule 6
	'*='           reduce using rule 6
	'+'            reduce using rule 6
	'+='           reduce using rule 6
	','            reduce using rule 6
	'-'            reduce using rule 6
	'-='           reduce using rule 6
	'/'            reduce using rule 6
	'/='           reduce using rule 6
	';'            reduce using rule 6
	'<'            reduce using rule 6
	'<='           reduce using rule 6
	'='            reduce using rule 6
	'=='           reduce using rule 6
	'>'            reduce using rule 6
	'>='           reduce using rule 6
	']'            reduce using rule 6
	'^'            reduce using rule 6
	'^='           reduce using rule 6
	'|='           reduce using rule 6
	'||'           reduce using rule 6
	'}'            reduce using rule 6
	%eof           reduce using rule 6


State 46

	Integer -> L_integ .                                (rule 7)

	'!='           reduce using rule 7
	'%'            reduce using rule 7
	'&&'           reduce using rule 7
	'&='           reduce using rule 7
	')'            reduce using rule 7
	'*'            reduce using rule 7
	'*='           reduce using rule 7
	'+'            reduce using rule 7
	'+='           reduce using rule 7
	','            reduce using rule 7
	'-'            reduce using rule 7
	'-='           reduce using rule 7
	'/'            reduce using rule 7
	'/='           reduce using rule 7
	';'            reduce using rule 7
	'<'            reduce using rule 7
	'<='           reduce using rule 7
	'='            reduce using rule 7
	'=='           reduce using rule 7
	'>'            reduce using rule 7
	'>='           reduce using rule 7
	']'            reduce using rule 7
	'^'            reduce using rule 7
	'^='           reduce using rule 7
	'|='           reduce using rule 7
	'||'           reduce using rule 7
	'}'            reduce using rule 7
	%eof           reduce using rule 7


State 47

	String -> L_quoted .                                (rule 8)

	'!='           reduce using rule 8
	'%'            reduce using rule 8
	'&&'           reduce using rule 8
	'&='           reduce using rule 8
	')'            reduce using rule 8
	'*'            reduce using rule 8
	'*='           reduce using rule 8
	'+'            reduce using rule 8
	'+='           reduce using rule 8
	','            reduce using rule 8
	'-'            reduce using rule 8
	'-='           reduce using rule 8
	'/'            reduce using rule 8
	'/='           reduce using rule 8
	';'            reduce using rule 8
	'<'            reduce using rule 8
	'<='           reduce using rule 8
	'='            reduce using rule 8
	'=='           reduce using rule 8
	'>'            reduce using rule 8
	'>='           reduce using rule 8
	']'            reduce using rule 8
	'^'            reduce using rule 8
	'^='           reduce using rule 8
	'|='           reduce using rule 8
	'||'           reduce using rule 8
	'}'            reduce using rule 8
	%eof           reduce using rule 8


State 48

	FunCall -> Ident . '(' ListRExpr ')'                (rule 49)
	BLExpr -> Ident . '[' RExpr ']'                     (rule 63)
	BLExpr -> Ident .                                   (rule 64)
	Stmt -> Ident . '++' ';'                            (rule 102)
	Stmt -> Ident . '--' ';'                            (rule 103)

	'&='           reduce using rule 64
	'('            shift, and enter state 93
	'*='           reduce using rule 64
	'++'           shift, and enter state 94
	'+='           reduce using rule 64
	'--'           shift, and enter state 95
	'-='           reduce using rule 64
	'/='           reduce using rule 64
	';'            reduce using rule 64
	'='            reduce using rule 64
	'['            shift, and enter state 96
	'^='           reduce using rule 64
	'|='           reduce using rule 64


State 49

	Stmt -> FunCall . ';'                               (rule 95)

	';'            shift, and enter state 92


State 50

	Stmt -> LExpr . Assignment_op RExpr ';'             (rule 99)
	Stmt -> LExpr . ';'                                 (rule 100)

	'&='           shift, and enter state 83
	'*='           shift, and enter state 84
	'+='           shift, and enter state 85
	'-='           shift, and enter state 86
	'/='           shift, and enter state 87
	';'            shift, and enter state 88
	'='            shift, and enter state 89
	'^='           shift, and enter state 90
	'|='           shift, and enter state 91

	Assignment_op  goto state 82

State 51

	Stmt -> CompStmt .                                  (rule 94)

	'('            reduce using rule 94
	'*'            reduce using rule 94
	'++'           reduce using rule 94
	'--'           reduce using rule 94
	'break'        reduce using rule 94
	'continue'     reduce using rule 94
	'do'           reduce using rule 94
	'else'         reduce using rule 94
	'func'         reduce using rule 94
	'if'           reduce using rule 94
	'var'          reduce using rule 94
	'while'        reduce using rule 94
	'{'            reduce using rule 94
	'}'            reduce using rule 94
	L_Ident        reduce using rule 94
	%eof           reduce using rule 94


State 52

	%start_pStmt -> Stmt .                              (rule 1)

	%eof           accept


State 53

	Stmt -> JumpStmt . ';'                              (rule 96)

	';'            shift, and enter state 81


State 54

	Stmt -> SelectionStmt .                             (rule 98)

	'('            reduce using rule 98
	'*'            reduce using rule 98
	'++'           reduce using rule 98
	'--'           reduce using rule 98
	'break'        reduce using rule 98
	'continue'     reduce using rule 98
	'do'           reduce using rule 98
	'else'         reduce using rule 98
	'func'         reduce using rule 98
	'if'           reduce using rule 98
	'var'          reduce using rule 98
	'while'        reduce using rule 98
	'{'            reduce using rule 98
	'}'            reduce using rule 98
	L_Ident        reduce using rule 98
	%eof           reduce using rule 98


State 55

	Stmt -> IterStmt .                                  (rule 97)

	'('            reduce using rule 97
	'*'            reduce using rule 97
	'++'           reduce using rule 97
	'--'           reduce using rule 97
	'break'        reduce using rule 97
	'continue'     reduce using rule 97
	'do'           reduce using rule 97
	'else'         reduce using rule 97
	'func'         reduce using rule 97
	'if'           reduce using rule 97
	'var'          reduce using rule 97
	'while'        reduce using rule 97
	'{'            reduce using rule 97
	'}'            reduce using rule 97
	L_Ident        reduce using rule 97
	%eof           reduce using rule 97


State 56

	JumpStmt -> 'break' .                               (rule 112)

	';'            reduce using rule 112


State 57

	JumpStmt -> 'continue' .                            (rule 113)

	';'            reduce using rule 113


State 58

	IterStmt -> 'do' . Stmt 'while' '(' RExpr ')' ';'    (rule 117)

	'('            shift, and enter state 12
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'--'           shift, and enter state 15
	'break'        shift, and enter state 56
	'continue'     shift, and enter state 57
	'do'           shift, and enter state 58
	'if'           shift, and enter state 59
	'var'          shift, and enter state 60
	'while'        shift, and enter state 61
	'{'            shift, and enter state 62
	L_Ident        shift, and enter state 5

	Ident          goto state 48
	FunCall        goto state 49
	LExpr          goto state 50
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11
	CompStmt       goto state 51
	Stmt           goto state 80
	JumpStmt       goto state 53
	SelectionStmt  goto state 54
	IterStmt       goto state 55

State 59

	SelectionStmt -> 'if' . '(' RExpr ')' Stmt          (rule 114)
	SelectionStmt -> 'if' . '(' RExpr ')' Stmt 'else' Stmt    (rule 115)

	'('            shift, and enter state 79


State 60

	Stmt -> 'var' . VarSpec ';'                         (rule 101)

	L_Ident        shift, and enter state 5

	Ident          goto state 68
	VarSpec        goto state 78

State 61

	IterStmt -> 'while' . '(' RExpr ')' Stmt            (rule 116)

	'('            shift, and enter state 77


State 62

	CompStmt -> '{' . ListBlockItem '}'                 (rule 87)

	'('            shift, and enter state 12
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'--'           shift, and enter state 15
	'break'        shift, and enter state 56
	'continue'     shift, and enter state 57
	'do'           shift, and enter state 58
	'func'         shift, and enter state 66
	'if'           shift, and enter state 59
	'var'          shift, and enter state 76
	'while'        shift, and enter state 61
	'{'            shift, and enter state 62
	'}'            reduce using rule 88
	L_Ident        shift, and enter state 5

	Ident          goto state 48
	FunCall        goto state 49
	LExpr          goto state 50
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11
	Decl           goto state 72
	CompStmt       goto state 51
	ListBlockItem  goto state 73
	BlockItem      goto state 74
	Stmt           goto state 75
	JumpStmt       goto state 53
	SelectionStmt  goto state 54
	IterStmt       goto state 55

State 63

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 64

	Program -> ListDecl .                               (rule 65)

	%eof           reduce using rule 65


State 65

	ListDecl -> Decl . ListDecl                         (rule 67)

	'func'         shift, and enter state 66
	'var'          shift, and enter state 67
	%eof           reduce using rule 66

	ListDecl       goto state 71
	Decl           goto state 65

State 66

	Decl -> 'func' . Ident '(' ListParameter ')' CompStmt    (rule 68)

	L_Ident        shift, and enter state 5

	Ident          goto state 70

State 67

	Decl -> 'var' . VarSpec ';'                         (rule 69)

	L_Ident        shift, and enter state 5

	Ident          goto state 68
	VarSpec        goto state 69

State 68

	VarSpec -> Ident . TypeSpec '=' RExpr               (rule 74)
	VarSpec -> Ident . '=' RExpr                        (rule 75)
	VarSpec -> Ident . TypeSpec                         (rule 76)

	'*'            shift, and enter state 158
	'='            shift, and enter state 159
	'['            shift, and enter state 160
	'bool'         shift, and enter state 161
	'char'         shift, and enter state 162
	'float'        shift, and enter state 163
	'int'          shift, and enter state 164
	'string'       shift, and enter state 165

	TypeSpec       goto state 155
	BasicType      goto state 156
	CompoundType   goto state 157

State 69

	Decl -> 'var' VarSpec . ';'                         (rule 69)

	';'            shift, and enter state 154


State 70

	Decl -> 'func' Ident . '(' ListParameter ')' CompStmt    (rule 68)

	'('            shift, and enter state 153


State 71

	ListDecl -> Decl ListDecl .                         (rule 67)

	%eof           reduce using rule 67


State 72

	BlockItem -> Decl .                                 (rule 90)

	'('            reduce using rule 90
	'*'            reduce using rule 90
	'++'           reduce using rule 90
	'--'           reduce using rule 90
	'break'        reduce using rule 90
	'continue'     reduce using rule 90
	'do'           reduce using rule 90
	'func'         reduce using rule 90
	'if'           reduce using rule 90
	'var'          reduce using rule 90
	'while'        reduce using rule 90
	'{'            reduce using rule 90
	'}'            reduce using rule 90
	L_Ident        reduce using rule 90


State 73

	CompStmt -> '{' ListBlockItem . '}'                 (rule 87)

	'}'            shift, and enter state 152


State 74

	ListBlockItem -> BlockItem . ListBlockItem          (rule 89)

	'('            shift, and enter state 12
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'--'           shift, and enter state 15
	'break'        shift, and enter state 56
	'continue'     shift, and enter state 57
	'do'           shift, and enter state 58
	'func'         shift, and enter state 66
	'if'           shift, and enter state 59
	'var'          shift, and enter state 76
	'while'        shift, and enter state 61
	'{'            shift, and enter state 62
	'}'            reduce using rule 88
	L_Ident        shift, and enter state 5

	Ident          goto state 48
	FunCall        goto state 49
	LExpr          goto state 50
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11
	Decl           goto state 72
	CompStmt       goto state 51
	ListBlockItem  goto state 151
	BlockItem      goto state 74
	Stmt           goto state 75
	JumpStmt       goto state 53
	SelectionStmt  goto state 54
	IterStmt       goto state 55

State 75

	BlockItem -> Stmt .                                 (rule 91)

	'('            reduce using rule 91
	'*'            reduce using rule 91
	'++'           reduce using rule 91
	'--'           reduce using rule 91
	'break'        reduce using rule 91
	'continue'     reduce using rule 91
	'do'           reduce using rule 91
	'func'         reduce using rule 91
	'if'           reduce using rule 91
	'var'          reduce using rule 91
	'while'        reduce using rule 91
	'{'            reduce using rule 91
	'}'            reduce using rule 91
	L_Ident        reduce using rule 91


State 76

	Decl -> 'var' . VarSpec ';'                         (rule 69)
	Stmt -> 'var' . VarSpec ';'                         (rule 101)

	L_Ident        shift, and enter state 5

	Ident          goto state 68
	VarSpec        goto state 150

State 77

	IterStmt -> 'while' '(' . RExpr ')' Stmt            (rule 116)

	'!'            shift, and enter state 37
	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'-'            shift, and enter state 40
	'--'           shift, and enter state 15
	'['            shift, and enter state 41
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 16
	Char           goto state 17
	Double         goto state 18
	Integer        goto state 19
	String         goto state 20
	Boolean        goto state 21
	RExpr          goto state 149
	RExpr1         goto state 23
	RExpr2         goto state 24
	RExpr3         goto state 25
	RExpr4         goto state 26
	RExpr5         goto state 27
	RExpr6         goto state 28
	RExpr7         goto state 29
	RExpr8         goto state 30
	RExpr9         goto state 31
	RExpr10        goto state 32
	RExpr11        goto state 33
	RExpr12        goto state 34
	FunCall        goto state 35
	LExpr          goto state 36
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11

State 78

	Stmt -> 'var' VarSpec . ';'                         (rule 101)

	';'            shift, and enter state 148


State 79

	SelectionStmt -> 'if' '(' . RExpr ')' Stmt          (rule 114)
	SelectionStmt -> 'if' '(' . RExpr ')' Stmt 'else' Stmt    (rule 115)

	'!'            shift, and enter state 37
	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'-'            shift, and enter state 40
	'--'           shift, and enter state 15
	'['            shift, and enter state 41
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 16
	Char           goto state 17
	Double         goto state 18
	Integer        goto state 19
	String         goto state 20
	Boolean        goto state 21
	RExpr          goto state 147
	RExpr1         goto state 23
	RExpr2         goto state 24
	RExpr3         goto state 25
	RExpr4         goto state 26
	RExpr5         goto state 27
	RExpr6         goto state 28
	RExpr7         goto state 29
	RExpr8         goto state 30
	RExpr9         goto state 31
	RExpr10        goto state 32
	RExpr11        goto state 33
	RExpr12        goto state 34
	FunCall        goto state 35
	LExpr          goto state 36
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11

State 80

	IterStmt -> 'do' Stmt . 'while' '(' RExpr ')' ';'    (rule 117)

	'while'        shift, and enter state 146


State 81

	Stmt -> JumpStmt ';' .                              (rule 96)

	'('            reduce using rule 96
	'*'            reduce using rule 96
	'++'           reduce using rule 96
	'--'           reduce using rule 96
	'break'        reduce using rule 96
	'continue'     reduce using rule 96
	'do'           reduce using rule 96
	'else'         reduce using rule 96
	'func'         reduce using rule 96
	'if'           reduce using rule 96
	'var'          reduce using rule 96
	'while'        reduce using rule 96
	'{'            reduce using rule 96
	'}'            reduce using rule 96
	L_Ident        reduce using rule 96
	%eof           reduce using rule 96


State 82

	Stmt -> LExpr Assignment_op . RExpr ';'             (rule 99)

	'!'            shift, and enter state 37
	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'-'            shift, and enter state 40
	'--'           shift, and enter state 15
	'['            shift, and enter state 41
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 16
	Char           goto state 17
	Double         goto state 18
	Integer        goto state 19
	String         goto state 20
	Boolean        goto state 21
	RExpr          goto state 145
	RExpr1         goto state 23
	RExpr2         goto state 24
	RExpr3         goto state 25
	RExpr4         goto state 26
	RExpr5         goto state 27
	RExpr6         goto state 28
	RExpr7         goto state 29
	RExpr8         goto state 30
	RExpr9         goto state 31
	RExpr10        goto state 32
	RExpr11        goto state 33
	RExpr12        goto state 34
	FunCall        goto state 35
	LExpr          goto state 36
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11

State 83

	Assignment_op -> '&=' .                             (rule 110)

	'!'            reduce using rule 110
	'&'            reduce using rule 110
	'('            reduce using rule 110
	'*'            reduce using rule 110
	'++'           reduce using rule 110
	'-'            reduce using rule 110
	'--'           reduce using rule 110
	'['            reduce using rule 110
	'false'        reduce using rule 110
	'true'         reduce using rule 110
	L_Ident        reduce using rule 110
	L_charac       reduce using rule 110
	L_doubl        reduce using rule 110
	L_integ        reduce using rule 110
	L_quoted       reduce using rule 110


State 84

	Assignment_op -> '*=' .                             (rule 105)

	'!'            reduce using rule 105
	'&'            reduce using rule 105
	'('            reduce using rule 105
	'*'            reduce using rule 105
	'++'           reduce using rule 105
	'-'            reduce using rule 105
	'--'           reduce using rule 105
	'['            reduce using rule 105
	'false'        reduce using rule 105
	'true'         reduce using rule 105
	L_Ident        reduce using rule 105
	L_charac       reduce using rule 105
	L_doubl        reduce using rule 105
	L_integ        reduce using rule 105
	L_quoted       reduce using rule 105


State 85

	Assignment_op -> '+=' .                             (rule 106)

	'!'            reduce using rule 106
	'&'            reduce using rule 106
	'('            reduce using rule 106
	'*'            reduce using rule 106
	'++'           reduce using rule 106
	'-'            reduce using rule 106
	'--'           reduce using rule 106
	'['            reduce using rule 106
	'false'        reduce using rule 106
	'true'         reduce using rule 106
	L_Ident        reduce using rule 106
	L_charac       reduce using rule 106
	L_doubl        reduce using rule 106
	L_integ        reduce using rule 106
	L_quoted       reduce using rule 106


State 86

	Assignment_op -> '-=' .                             (rule 108)

	'!'            reduce using rule 108
	'&'            reduce using rule 108
	'('            reduce using rule 108
	'*'            reduce using rule 108
	'++'           reduce using rule 108
	'-'            reduce using rule 108
	'--'           reduce using rule 108
	'['            reduce using rule 108
	'false'        reduce using rule 108
	'true'         reduce using rule 108
	L_Ident        reduce using rule 108
	L_charac       reduce using rule 108
	L_doubl        reduce using rule 108
	L_integ        reduce using rule 108
	L_quoted       reduce using rule 108


State 87

	Assignment_op -> '/=' .                             (rule 107)

	'!'            reduce using rule 107
	'&'            reduce using rule 107
	'('            reduce using rule 107
	'*'            reduce using rule 107
	'++'           reduce using rule 107
	'-'            reduce using rule 107
	'--'           reduce using rule 107
	'['            reduce using rule 107
	'false'        reduce using rule 107
	'true'         reduce using rule 107
	L_Ident        reduce using rule 107
	L_charac       reduce using rule 107
	L_doubl        reduce using rule 107
	L_integ        reduce using rule 107
	L_quoted       reduce using rule 107


State 88

	Stmt -> LExpr ';' .                                 (rule 100)

	'('            reduce using rule 100
	'*'            reduce using rule 100
	'++'           reduce using rule 100
	'--'           reduce using rule 100
	'break'        reduce using rule 100
	'continue'     reduce using rule 100
	'do'           reduce using rule 100
	'else'         reduce using rule 100
	'func'         reduce using rule 100
	'if'           reduce using rule 100
	'var'          reduce using rule 100
	'while'        reduce using rule 100
	'{'            reduce using rule 100
	'}'            reduce using rule 100
	L_Ident        reduce using rule 100
	%eof           reduce using rule 100


State 89

	Assignment_op -> '=' .                              (rule 104)

	'!'            reduce using rule 104
	'&'            reduce using rule 104
	'('            reduce using rule 104
	'*'            reduce using rule 104
	'++'           reduce using rule 104
	'-'            reduce using rule 104
	'--'           reduce using rule 104
	'['            reduce using rule 104
	'false'        reduce using rule 104
	'true'         reduce using rule 104
	L_Ident        reduce using rule 104
	L_charac       reduce using rule 104
	L_doubl        reduce using rule 104
	L_integ        reduce using rule 104
	L_quoted       reduce using rule 104


State 90

	Assignment_op -> '^=' .                             (rule 109)

	'!'            reduce using rule 109
	'&'            reduce using rule 109
	'('            reduce using rule 109
	'*'            reduce using rule 109
	'++'           reduce using rule 109
	'-'            reduce using rule 109
	'--'           reduce using rule 109
	'['            reduce using rule 109
	'false'        reduce using rule 109
	'true'         reduce using rule 109
	L_Ident        reduce using rule 109
	L_charac       reduce using rule 109
	L_doubl        reduce using rule 109
	L_integ        reduce using rule 109
	L_quoted       reduce using rule 109


State 91

	Assignment_op -> '|=' .                             (rule 111)

	'!'            reduce using rule 111
	'&'            reduce using rule 111
	'('            reduce using rule 111
	'*'            reduce using rule 111
	'++'           reduce using rule 111
	'-'            reduce using rule 111
	'--'           reduce using rule 111
	'['            reduce using rule 111
	'false'        reduce using rule 111
	'true'         reduce using rule 111
	L_Ident        reduce using rule 111
	L_charac       reduce using rule 111
	L_doubl        reduce using rule 111
	L_integ        reduce using rule 111
	L_quoted       reduce using rule 111


State 92

	Stmt -> FunCall ';' .                               (rule 95)

	'('            reduce using rule 95
	'*'            reduce using rule 95
	'++'           reduce using rule 95
	'--'           reduce using rule 95
	'break'        reduce using rule 95
	'continue'     reduce using rule 95
	'do'           reduce using rule 95
	'else'         reduce using rule 95
	'func'         reduce using rule 95
	'if'           reduce using rule 95
	'var'          reduce using rule 95
	'while'        reduce using rule 95
	'{'            reduce using rule 95
	'}'            reduce using rule 95
	L_Ident        reduce using rule 95
	%eof           reduce using rule 95


State 93

	FunCall -> Ident '(' . ListRExpr ')'                (rule 49)

	'!'            shift, and enter state 37
	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	')'            reduce using rule 50
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'-'            shift, and enter state 40
	'--'           shift, and enter state 15
	'['            shift, and enter state 41
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 16
	Char           goto state 17
	Double         goto state 18
	Integer        goto state 19
	String         goto state 20
	Boolean        goto state 21
	RExpr          goto state 143
	RExpr1         goto state 23
	RExpr2         goto state 24
	RExpr3         goto state 25
	RExpr4         goto state 26
	RExpr5         goto state 27
	RExpr6         goto state 28
	RExpr7         goto state 29
	RExpr8         goto state 30
	RExpr9         goto state 31
	RExpr10        goto state 32
	RExpr11        goto state 33
	RExpr12        goto state 34
	FunCall        goto state 35
	ListRExpr      goto state 144
	LExpr          goto state 36
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11

State 94

	Stmt -> Ident '++' . ';'                            (rule 102)

	';'            shift, and enter state 142


State 95

	Stmt -> Ident '--' . ';'                            (rule 103)

	';'            shift, and enter state 141


State 96

	BLExpr -> Ident '[' . RExpr ']'                     (rule 63)

	'!'            shift, and enter state 37
	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'-'            shift, and enter state 40
	'--'           shift, and enter state 15
	'['            shift, and enter state 41
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 16
	Char           goto state 17
	Double         goto state 18
	Integer        goto state 19
	String         goto state 20
	Boolean        goto state 21
	RExpr          goto state 140
	RExpr1         goto state 23
	RExpr2         goto state 24
	RExpr3         goto state 25
	RExpr4         goto state 26
	RExpr5         goto state 27
	RExpr6         goto state 28
	RExpr7         goto state 29
	RExpr8         goto state 30
	RExpr9         goto state 31
	RExpr10        goto state 32
	RExpr11        goto state 33
	RExpr12        goto state 34
	FunCall        goto state 35
	LExpr          goto state 36
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11

State 97

	RExpr9 -> '[' Integer . ']' BasicType '{' ListRExpr '}'    (rule 44)

	']'            shift, and enter state 139


State 98

	RExpr7 -> '-' RExpr8 .                              (rule 34)

	'!='           reduce using rule 34
	'%'            reduce using rule 34
	'&&'           reduce using rule 34
	')'            reduce using rule 34
	'*'            reduce using rule 34
	'+'            reduce using rule 34
	','            reduce using rule 34
	'-'            reduce using rule 34
	'/'            reduce using rule 34
	';'            reduce using rule 34
	'<'            reduce using rule 34
	'<='           reduce using rule 34
	'=='           reduce using rule 34
	'>'            reduce using rule 34
	'>='           reduce using rule 34
	']'            reduce using rule 34
	'^'            reduce using rule 34
	'||'           reduce using rule 34
	'}'            reduce using rule 34
	%eof           reduce using rule 34


State 99

	RExpr -> RExpr . '||' RExpr1                        (rule 12)
	RExpr12 -> '(' RExpr . ')'                          (rule 47)

	')'            shift, and enter state 138
	'||'           shift, and enter state 116


State 100

	RExpr12 -> LExpr .                                  (rule 48)
	LExpr3 -> '(' LExpr . ')'                           (rule 62)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            shift, and enter state 123
			(reduce using rule 48)

	'*'            reduce using rule 48
	'+'            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'^'            reduce using rule 48
	'||'           reduce using rule 48


State 101

	RExpr7 -> '&' LExpr .                               (rule 35)

	'!='           reduce using rule 35
	'%'            reduce using rule 35
	'&&'           reduce using rule 35
	')'            reduce using rule 35
	'*'            reduce using rule 35
	'+'            reduce using rule 35
	','            reduce using rule 35
	'-'            reduce using rule 35
	'/'            reduce using rule 35
	';'            reduce using rule 35
	'<'            reduce using rule 35
	'<='           reduce using rule 35
	'=='           reduce using rule 35
	'>'            reduce using rule 35
	'>='           reduce using rule 35
	']'            reduce using rule 35
	'^'            reduce using rule 35
	'||'           reduce using rule 35
	'}'            reduce using rule 35
	%eof           reduce using rule 35


State 102

	RExpr2 -> '!' RExpr3 .                              (rule 16)

	'&&'           reduce using rule 16
	')'            reduce using rule 16
	','            reduce using rule 16
	';'            reduce using rule 16
	']'            reduce using rule 16
	'||'           reduce using rule 16
	'}'            reduce using rule 16
	%eof           reduce using rule 16


State 103

	RExpr6 -> RExpr7 '^' . RExpr6                       (rule 32)

	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'-'            shift, and enter state 40
	'--'           shift, and enter state 15
	'['            shift, and enter state 41
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 16
	Char           goto state 17
	Double         goto state 18
	Integer        goto state 19
	String         goto state 20
	Boolean        goto state 21
	RExpr6         goto state 137
	RExpr7         goto state 29
	RExpr8         goto state 30
	RExpr9         goto state 31
	RExpr10        goto state 32
	RExpr11        goto state 33
	RExpr12        goto state 34
	FunCall        goto state 35
	LExpr          goto state 36
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11

State 104

	RExpr5 -> RExpr5 '%' . RExpr6                       (rule 30)

	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'-'            shift, and enter state 40
	'--'           shift, and enter state 15
	'['            shift, and enter state 41
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 16
	Char           goto state 17
	Double         goto state 18
	Integer        goto state 19
	String         goto state 20
	Boolean        goto state 21
	RExpr6         goto state 136
	RExpr7         goto state 29
	RExpr8         goto state 30
	RExpr9         goto state 31
	RExpr10        goto state 32
	RExpr11        goto state 33
	RExpr12        goto state 34
	FunCall        goto state 35
	LExpr          goto state 36
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11

State 105

	RExpr5 -> RExpr5 '*' . RExpr6                       (rule 28)

	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'-'            shift, and enter state 40
	'--'           shift, and enter state 15
	'['            shift, and enter state 41
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 16
	Char           goto state 17
	Double         goto state 18
	Integer        goto state 19
	String         goto state 20
	Boolean        goto state 21
	RExpr6         goto state 135
	RExpr7         goto state 29
	RExpr8         goto state 30
	RExpr9         goto state 31
	RExpr10        goto state 32
	RExpr11        goto state 33
	RExpr12        goto state 34
	FunCall        goto state 35
	LExpr          goto state 36
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11

State 106

	RExpr5 -> RExpr5 '/' . RExpr6                       (rule 29)

	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'-'            shift, and enter state 40
	'--'           shift, and enter state 15
	'['            shift, and enter state 41
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 16
	Char           goto state 17
	Double         goto state 18
	Integer        goto state 19
	String         goto state 20
	Boolean        goto state 21
	RExpr6         goto state 134
	RExpr7         goto state 29
	RExpr8         goto state 30
	RExpr9         goto state 31
	RExpr10        goto state 32
	RExpr11        goto state 33
	RExpr12        goto state 34
	FunCall        goto state 35
	LExpr          goto state 36
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11

State 107

	RExpr3 -> RExpr4 '!=' . RExpr4                      (rule 19)

	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'-'            shift, and enter state 40
	'--'           shift, and enter state 15
	'['            shift, and enter state 41
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 16
	Char           goto state 17
	Double         goto state 18
	Integer        goto state 19
	String         goto state 20
	Boolean        goto state 21
	RExpr4         goto state 133
	RExpr5         goto state 27
	RExpr6         goto state 28
	RExpr7         goto state 29
	RExpr8         goto state 30
	RExpr9         goto state 31
	RExpr10        goto state 32
	RExpr11        goto state 33
	RExpr12        goto state 34
	FunCall        goto state 35
	LExpr          goto state 36
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11

State 108

	RExpr4 -> RExpr4 '+' . RExpr5                       (rule 25)

	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'-'            shift, and enter state 40
	'--'           shift, and enter state 15
	'['            shift, and enter state 41
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 16
	Char           goto state 17
	Double         goto state 18
	Integer        goto state 19
	String         goto state 20
	Boolean        goto state 21
	RExpr5         goto state 132
	RExpr6         goto state 28
	RExpr7         goto state 29
	RExpr8         goto state 30
	RExpr9         goto state 31
	RExpr10        goto state 32
	RExpr11        goto state 33
	RExpr12        goto state 34
	FunCall        goto state 35
	LExpr          goto state 36
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11

State 109

	RExpr4 -> RExpr4 '-' . RExpr5                       (rule 26)

	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'-'            shift, and enter state 40
	'--'           shift, and enter state 15
	'['            shift, and enter state 41
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 16
	Char           goto state 17
	Double         goto state 18
	Integer        goto state 19
	String         goto state 20
	Boolean        goto state 21
	RExpr5         goto state 131
	RExpr6         goto state 28
	RExpr7         goto state 29
	RExpr8         goto state 30
	RExpr9         goto state 31
	RExpr10        goto state 32
	RExpr11        goto state 33
	RExpr12        goto state 34
	FunCall        goto state 35
	LExpr          goto state 36
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11

State 110

	RExpr3 -> RExpr4 '<' . RExpr4                       (rule 20)

	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'-'            shift, and enter state 40
	'--'           shift, and enter state 15
	'['            shift, and enter state 41
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 16
	Char           goto state 17
	Double         goto state 18
	Integer        goto state 19
	String         goto state 20
	Boolean        goto state 21
	RExpr4         goto state 130
	RExpr5         goto state 27
	RExpr6         goto state 28
	RExpr7         goto state 29
	RExpr8         goto state 30
	RExpr9         goto state 31
	RExpr10        goto state 32
	RExpr11        goto state 33
	RExpr12        goto state 34
	FunCall        goto state 35
	LExpr          goto state 36
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11

State 111

	RExpr3 -> RExpr4 '<=' . RExpr4                      (rule 21)

	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'-'            shift, and enter state 40
	'--'           shift, and enter state 15
	'['            shift, and enter state 41
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 16
	Char           goto state 17
	Double         goto state 18
	Integer        goto state 19
	String         goto state 20
	Boolean        goto state 21
	RExpr4         goto state 129
	RExpr5         goto state 27
	RExpr6         goto state 28
	RExpr7         goto state 29
	RExpr8         goto state 30
	RExpr9         goto state 31
	RExpr10        goto state 32
	RExpr11        goto state 33
	RExpr12        goto state 34
	FunCall        goto state 35
	LExpr          goto state 36
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11

State 112

	RExpr3 -> RExpr4 '==' . RExpr4                      (rule 18)

	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'-'            shift, and enter state 40
	'--'           shift, and enter state 15
	'['            shift, and enter state 41
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 16
	Char           goto state 17
	Double         goto state 18
	Integer        goto state 19
	String         goto state 20
	Boolean        goto state 21
	RExpr4         goto state 128
	RExpr5         goto state 27
	RExpr6         goto state 28
	RExpr7         goto state 29
	RExpr8         goto state 30
	RExpr9         goto state 31
	RExpr10        goto state 32
	RExpr11        goto state 33
	RExpr12        goto state 34
	FunCall        goto state 35
	LExpr          goto state 36
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11

State 113

	RExpr3 -> RExpr4 '>' . RExpr4                       (rule 22)

	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'-'            shift, and enter state 40
	'--'           shift, and enter state 15
	'['            shift, and enter state 41
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 16
	Char           goto state 17
	Double         goto state 18
	Integer        goto state 19
	String         goto state 20
	Boolean        goto state 21
	RExpr4         goto state 127
	RExpr5         goto state 27
	RExpr6         goto state 28
	RExpr7         goto state 29
	RExpr8         goto state 30
	RExpr9         goto state 31
	RExpr10        goto state 32
	RExpr11        goto state 33
	RExpr12        goto state 34
	FunCall        goto state 35
	LExpr          goto state 36
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11

State 114

	RExpr3 -> RExpr4 '>=' . RExpr4                      (rule 23)

	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'-'            shift, and enter state 40
	'--'           shift, and enter state 15
	'['            shift, and enter state 41
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 16
	Char           goto state 17
	Double         goto state 18
	Integer        goto state 19
	String         goto state 20
	Boolean        goto state 21
	RExpr4         goto state 126
	RExpr5         goto state 27
	RExpr6         goto state 28
	RExpr7         goto state 29
	RExpr8         goto state 30
	RExpr9         goto state 31
	RExpr10        goto state 32
	RExpr11        goto state 33
	RExpr12        goto state 34
	FunCall        goto state 35
	LExpr          goto state 36
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11

State 115

	RExpr1 -> RExpr1 '&&' . RExpr2                      (rule 14)

	'!'            shift, and enter state 37
	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'-'            shift, and enter state 40
	'--'           shift, and enter state 15
	'['            shift, and enter state 41
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 16
	Char           goto state 17
	Double         goto state 18
	Integer        goto state 19
	String         goto state 20
	Boolean        goto state 21
	RExpr2         goto state 125
	RExpr3         goto state 25
	RExpr4         goto state 26
	RExpr5         goto state 27
	RExpr6         goto state 28
	RExpr7         goto state 29
	RExpr8         goto state 30
	RExpr9         goto state 31
	RExpr10        goto state 32
	RExpr11        goto state 33
	RExpr12        goto state 34
	FunCall        goto state 35
	LExpr          goto state 36
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11

State 116

	RExpr -> RExpr '||' . RExpr1                        (rule 12)

	'!'            shift, and enter state 37
	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'-'            shift, and enter state 40
	'--'           shift, and enter state 15
	'['            shift, and enter state 41
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 16
	Char           goto state 17
	Double         goto state 18
	Integer        goto state 19
	String         goto state 20
	Boolean        goto state 21
	RExpr1         goto state 124
	RExpr2         goto state 24
	RExpr3         goto state 25
	RExpr4         goto state 26
	RExpr5         goto state 27
	RExpr6         goto state 28
	RExpr7         goto state 29
	RExpr8         goto state 30
	RExpr9         goto state 31
	RExpr10        goto state 32
	RExpr11        goto state 33
	RExpr12        goto state 34
	FunCall        goto state 35
	LExpr          goto state 36
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11

State 117

	LExpr1 -> '--' LExpr2 .                             (rule 57)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	'&='           reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'*='           reduce using rule 57
	'+'            reduce using rule 57
	'+='           reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'-='           reduce using rule 57
	'/'            reduce using rule 57
	'/='           reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'='            reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	']'            reduce using rule 57
	'^'            reduce using rule 57
	'^='           reduce using rule 57
	'|='           reduce using rule 57
	'||'           reduce using rule 57
	'}'            reduce using rule 57
	%eof           reduce using rule 57


State 118

	LExpr1 -> '++' LExpr2 .                             (rule 56)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	'&='           reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'*='           reduce using rule 56
	'+'            reduce using rule 56
	'+='           reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'-='           reduce using rule 56
	'/'            reduce using rule 56
	'/='           reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'='            reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	']'            reduce using rule 56
	'^'            reduce using rule 56
	'^='           reduce using rule 56
	'|='           reduce using rule 56
	'||'           reduce using rule 56
	'}'            reduce using rule 56
	%eof           reduce using rule 56


State 119

	LExpr -> '*' RExpr9 .                               (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	'&='           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'*='           reduce using rule 54
	'+'            reduce using rule 54
	'+='           reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'-='           reduce using rule 54
	'/'            reduce using rule 54
	'/='           reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'='            reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	']'            reduce using rule 54
	'^'            reduce using rule 54
	'^='           reduce using rule 54
	'|='           reduce using rule 54
	'||'           reduce using rule 54
	'}'            reduce using rule 54
	%eof           reduce using rule 54


State 120

	LExpr3 -> '(' LExpr . ')'                           (rule 62)

	')'            shift, and enter state 123


State 121

	LExpr2 -> LExpr3 '++' .                             (rule 59)

	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&&'           reduce using rule 59
	'&='           reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'*='           reduce using rule 59
	'+'            reduce using rule 59
	'+='           reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'-='           reduce using rule 59
	'/'            reduce using rule 59
	'/='           reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'='            reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	']'            reduce using rule 59
	'^'            reduce using rule 59
	'^='           reduce using rule 59
	'|='           reduce using rule 59
	'||'           reduce using rule 59
	'}'            reduce using rule 59
	%eof           reduce using rule 59


State 122

	LExpr2 -> LExpr3 '--' .                             (rule 60)

	'!='           reduce using rule 60
	'%'            reduce using rule 60
	'&&'           reduce using rule 60
	'&='           reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'*='           reduce using rule 60
	'+'            reduce using rule 60
	'+='           reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'-='           reduce using rule 60
	'/'            reduce using rule 60
	'/='           reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'='            reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	']'            reduce using rule 60
	'^'            reduce using rule 60
	'^='           reduce using rule 60
	'|='           reduce using rule 60
	'||'           reduce using rule 60
	'}'            reduce using rule 60
	%eof           reduce using rule 60


State 123

	LExpr3 -> '(' LExpr ')' .                           (rule 62)

	'!='           reduce using rule 62
	'%'            reduce using rule 62
	'&&'           reduce using rule 62
	'&='           reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'*='           reduce using rule 62
	'+'            reduce using rule 62
	'++'           reduce using rule 62
	'+='           reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'--'           reduce using rule 62
	'-='           reduce using rule 62
	'/'            reduce using rule 62
	'/='           reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'='            reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	']'            reduce using rule 62
	'^'            reduce using rule 62
	'^='           reduce using rule 62
	'|='           reduce using rule 62
	'||'           reduce using rule 62
	'}'            reduce using rule 62
	%eof           reduce using rule 62


State 124

	RExpr -> RExpr '||' RExpr1 .                        (rule 12)
	RExpr1 -> RExpr1 . '&&' RExpr2                      (rule 14)

	'&&'           shift, and enter state 115
	')'            reduce using rule 12
	','            reduce using rule 12
	';'            reduce using rule 12
	']'            reduce using rule 12
	'||'           reduce using rule 12
	'}'            reduce using rule 12
	%eof           reduce using rule 12


State 125

	RExpr1 -> RExpr1 '&&' RExpr2 .                      (rule 14)

	'&&'           reduce using rule 14
	')'            reduce using rule 14
	','            reduce using rule 14
	';'            reduce using rule 14
	']'            reduce using rule 14
	'||'           reduce using rule 14
	'}'            reduce using rule 14
	%eof           reduce using rule 14


State 126

	RExpr3 -> RExpr4 '>=' RExpr4 .                      (rule 23)
	RExpr4 -> RExpr4 . '+' RExpr5                       (rule 25)
	RExpr4 -> RExpr4 . '-' RExpr5                       (rule 26)

	'&&'           reduce using rule 23
	')'            reduce using rule 23
	'+'            shift, and enter state 108
	','            reduce using rule 23
	'-'            shift, and enter state 109
	';'            reduce using rule 23
	']'            reduce using rule 23
	'||'           reduce using rule 23
	'}'            reduce using rule 23
	%eof           reduce using rule 23


State 127

	RExpr3 -> RExpr4 '>' RExpr4 .                       (rule 22)
	RExpr4 -> RExpr4 . '+' RExpr5                       (rule 25)
	RExpr4 -> RExpr4 . '-' RExpr5                       (rule 26)

	'&&'           reduce using rule 22
	')'            reduce using rule 22
	'+'            shift, and enter state 108
	','            reduce using rule 22
	'-'            shift, and enter state 109
	';'            reduce using rule 22
	']'            reduce using rule 22
	'||'           reduce using rule 22
	'}'            reduce using rule 22
	%eof           reduce using rule 22


State 128

	RExpr3 -> RExpr4 '==' RExpr4 .                      (rule 18)
	RExpr4 -> RExpr4 . '+' RExpr5                       (rule 25)
	RExpr4 -> RExpr4 . '-' RExpr5                       (rule 26)

	'&&'           reduce using rule 18
	')'            reduce using rule 18
	'+'            shift, and enter state 108
	','            reduce using rule 18
	'-'            shift, and enter state 109
	';'            reduce using rule 18
	']'            reduce using rule 18
	'||'           reduce using rule 18
	'}'            reduce using rule 18
	%eof           reduce using rule 18


State 129

	RExpr3 -> RExpr4 '<=' RExpr4 .                      (rule 21)
	RExpr4 -> RExpr4 . '+' RExpr5                       (rule 25)
	RExpr4 -> RExpr4 . '-' RExpr5                       (rule 26)

	'&&'           reduce using rule 21
	')'            reduce using rule 21
	'+'            shift, and enter state 108
	','            reduce using rule 21
	'-'            shift, and enter state 109
	';'            reduce using rule 21
	']'            reduce using rule 21
	'||'           reduce using rule 21
	'}'            reduce using rule 21
	%eof           reduce using rule 21


State 130

	RExpr3 -> RExpr4 '<' RExpr4 .                       (rule 20)
	RExpr4 -> RExpr4 . '+' RExpr5                       (rule 25)
	RExpr4 -> RExpr4 . '-' RExpr5                       (rule 26)

	'&&'           reduce using rule 20
	')'            reduce using rule 20
	'+'            shift, and enter state 108
	','            reduce using rule 20
	'-'            shift, and enter state 109
	';'            reduce using rule 20
	']'            reduce using rule 20
	'||'           reduce using rule 20
	'}'            reduce using rule 20
	%eof           reduce using rule 20


State 131

	RExpr4 -> RExpr4 '-' RExpr5 .                       (rule 26)
	RExpr5 -> RExpr5 . '*' RExpr6                       (rule 28)
	RExpr5 -> RExpr5 . '/' RExpr6                       (rule 29)
	RExpr5 -> RExpr5 . '%' RExpr6                       (rule 30)

	'!='           reduce using rule 26
	'%'            shift, and enter state 104
	'&&'           reduce using rule 26
	')'            reduce using rule 26
	'*'            shift, and enter state 105
	'+'            reduce using rule 26
	','            reduce using rule 26
	'-'            reduce using rule 26
	'/'            shift, and enter state 106
	';'            reduce using rule 26
	'<'            reduce using rule 26
	'<='           reduce using rule 26
	'=='           reduce using rule 26
	'>'            reduce using rule 26
	'>='           reduce using rule 26
	']'            reduce using rule 26
	'||'           reduce using rule 26
	'}'            reduce using rule 26
	%eof           reduce using rule 26


State 132

	RExpr4 -> RExpr4 '+' RExpr5 .                       (rule 25)
	RExpr5 -> RExpr5 . '*' RExpr6                       (rule 28)
	RExpr5 -> RExpr5 . '/' RExpr6                       (rule 29)
	RExpr5 -> RExpr5 . '%' RExpr6                       (rule 30)

	'!='           reduce using rule 25
	'%'            shift, and enter state 104
	'&&'           reduce using rule 25
	')'            reduce using rule 25
	'*'            shift, and enter state 105
	'+'            reduce using rule 25
	','            reduce using rule 25
	'-'            reduce using rule 25
	'/'            shift, and enter state 106
	';'            reduce using rule 25
	'<'            reduce using rule 25
	'<='           reduce using rule 25
	'=='           reduce using rule 25
	'>'            reduce using rule 25
	'>='           reduce using rule 25
	']'            reduce using rule 25
	'||'           reduce using rule 25
	'}'            reduce using rule 25
	%eof           reduce using rule 25


State 133

	RExpr3 -> RExpr4 '!=' RExpr4 .                      (rule 19)
	RExpr4 -> RExpr4 . '+' RExpr5                       (rule 25)
	RExpr4 -> RExpr4 . '-' RExpr5                       (rule 26)

	'&&'           reduce using rule 19
	')'            reduce using rule 19
	'+'            shift, and enter state 108
	','            reduce using rule 19
	'-'            shift, and enter state 109
	';'            reduce using rule 19
	']'            reduce using rule 19
	'||'           reduce using rule 19
	'}'            reduce using rule 19
	%eof           reduce using rule 19


State 134

	RExpr5 -> RExpr5 '/' RExpr6 .                       (rule 29)

	'!='           reduce using rule 29
	'%'            reduce using rule 29
	'&&'           reduce using rule 29
	')'            reduce using rule 29
	'*'            reduce using rule 29
	'+'            reduce using rule 29
	','            reduce using rule 29
	'-'            reduce using rule 29
	'/'            reduce using rule 29
	';'            reduce using rule 29
	'<'            reduce using rule 29
	'<='           reduce using rule 29
	'=='           reduce using rule 29
	'>'            reduce using rule 29
	'>='           reduce using rule 29
	']'            reduce using rule 29
	'||'           reduce using rule 29
	'}'            reduce using rule 29
	%eof           reduce using rule 29


State 135

	RExpr5 -> RExpr5 '*' RExpr6 .                       (rule 28)

	'!='           reduce using rule 28
	'%'            reduce using rule 28
	'&&'           reduce using rule 28
	')'            reduce using rule 28
	'*'            reduce using rule 28
	'+'            reduce using rule 28
	','            reduce using rule 28
	'-'            reduce using rule 28
	'/'            reduce using rule 28
	';'            reduce using rule 28
	'<'            reduce using rule 28
	'<='           reduce using rule 28
	'=='           reduce using rule 28
	'>'            reduce using rule 28
	'>='           reduce using rule 28
	']'            reduce using rule 28
	'||'           reduce using rule 28
	'}'            reduce using rule 28
	%eof           reduce using rule 28


State 136

	RExpr5 -> RExpr5 '%' RExpr6 .                       (rule 30)

	'!='           reduce using rule 30
	'%'            reduce using rule 30
	'&&'           reduce using rule 30
	')'            reduce using rule 30
	'*'            reduce using rule 30
	'+'            reduce using rule 30
	','            reduce using rule 30
	'-'            reduce using rule 30
	'/'            reduce using rule 30
	';'            reduce using rule 30
	'<'            reduce using rule 30
	'<='           reduce using rule 30
	'=='           reduce using rule 30
	'>'            reduce using rule 30
	'>='           reduce using rule 30
	']'            reduce using rule 30
	'||'           reduce using rule 30
	'}'            reduce using rule 30
	%eof           reduce using rule 30


State 137

	RExpr6 -> RExpr7 '^' RExpr6 .                       (rule 32)

	'!='           reduce using rule 32
	'%'            reduce using rule 32
	'&&'           reduce using rule 32
	')'            reduce using rule 32
	'*'            reduce using rule 32
	'+'            reduce using rule 32
	','            reduce using rule 32
	'-'            reduce using rule 32
	'/'            reduce using rule 32
	';'            reduce using rule 32
	'<'            reduce using rule 32
	'<='           reduce using rule 32
	'=='           reduce using rule 32
	'>'            reduce using rule 32
	'>='           reduce using rule 32
	']'            reduce using rule 32
	'||'           reduce using rule 32
	'}'            reduce using rule 32
	%eof           reduce using rule 32


State 138

	RExpr12 -> '(' RExpr ')' .                          (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	'&='           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'*='           reduce using rule 47
	'+'            reduce using rule 47
	'+='           reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'-='           reduce using rule 47
	'/'            reduce using rule 47
	'/='           reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'='            reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	']'            reduce using rule 47
	'^'            reduce using rule 47
	'^='           reduce using rule 47
	'|='           reduce using rule 47
	'||'           reduce using rule 47
	'}'            reduce using rule 47
	%eof           reduce using rule 47


State 139

	RExpr9 -> '[' Integer ']' . BasicType '{' ListRExpr '}'    (rule 44)

	'bool'         shift, and enter state 161
	'char'         shift, and enter state 162
	'float'        shift, and enter state 163
	'int'          shift, and enter state 164
	'string'       shift, and enter state 165

	BasicType      goto state 182

State 140

	RExpr -> RExpr . '||' RExpr1                        (rule 12)
	BLExpr -> Ident '[' RExpr . ']'                     (rule 63)

	']'            shift, and enter state 181
	'||'           shift, and enter state 116


State 141

	Stmt -> Ident '--' ';' .                            (rule 103)

	'('            reduce using rule 103
	'*'            reduce using rule 103
	'++'           reduce using rule 103
	'--'           reduce using rule 103
	'break'        reduce using rule 103
	'continue'     reduce using rule 103
	'do'           reduce using rule 103
	'else'         reduce using rule 103
	'func'         reduce using rule 103
	'if'           reduce using rule 103
	'var'          reduce using rule 103
	'while'        reduce using rule 103
	'{'            reduce using rule 103
	'}'            reduce using rule 103
	L_Ident        reduce using rule 103
	%eof           reduce using rule 103


State 142

	Stmt -> Ident '++' ';' .                            (rule 102)

	'('            reduce using rule 102
	'*'            reduce using rule 102
	'++'           reduce using rule 102
	'--'           reduce using rule 102
	'break'        reduce using rule 102
	'continue'     reduce using rule 102
	'do'           reduce using rule 102
	'else'         reduce using rule 102
	'func'         reduce using rule 102
	'if'           reduce using rule 102
	'var'          reduce using rule 102
	'while'        reduce using rule 102
	'{'            reduce using rule 102
	'}'            reduce using rule 102
	L_Ident        reduce using rule 102
	%eof           reduce using rule 102


State 143

	RExpr -> RExpr . '||' RExpr1                        (rule 12)
	ListRExpr -> RExpr .                                (rule 51)
	ListRExpr -> RExpr . ',' ListRExpr                  (rule 52)

	')'            reduce using rule 51
	','            shift, and enter state 180
	'||'           shift, and enter state 116
	'}'            reduce using rule 51


State 144

	FunCall -> Ident '(' ListRExpr . ')'                (rule 49)

	')'            shift, and enter state 179


State 145

	RExpr -> RExpr . '||' RExpr1                        (rule 12)
	Stmt -> LExpr Assignment_op RExpr . ';'             (rule 99)

	';'            shift, and enter state 178
	'||'           shift, and enter state 116


State 146

	IterStmt -> 'do' Stmt 'while' . '(' RExpr ')' ';'    (rule 117)

	'('            shift, and enter state 177


State 147

	RExpr -> RExpr . '||' RExpr1                        (rule 12)
	SelectionStmt -> 'if' '(' RExpr . ')' Stmt          (rule 114)
	SelectionStmt -> 'if' '(' RExpr . ')' Stmt 'else' Stmt    (rule 115)

	')'            shift, and enter state 176
	'||'           shift, and enter state 116


State 148

	Stmt -> 'var' VarSpec ';' .                         (rule 101)

	'('            reduce using rule 101
	'*'            reduce using rule 101
	'++'           reduce using rule 101
	'--'           reduce using rule 101
	'break'        reduce using rule 101
	'continue'     reduce using rule 101
	'do'           reduce using rule 101
	'else'         reduce using rule 101
	'func'         reduce using rule 101
	'if'           reduce using rule 101
	'var'          reduce using rule 101
	'while'        reduce using rule 101
	'{'            reduce using rule 101
	'}'            reduce using rule 101
	L_Ident        reduce using rule 101
	%eof           reduce using rule 101


State 149

	RExpr -> RExpr . '||' RExpr1                        (rule 12)
	IterStmt -> 'while' '(' RExpr . ')' Stmt            (rule 116)

	')'            shift, and enter state 175
	'||'           shift, and enter state 116


State 150

	Decl -> 'var' VarSpec . ';'                         (rule 69)
	Stmt -> 'var' VarSpec . ';'                         (rule 101)

	';'            shift, and enter state 174


State 151

	ListBlockItem -> BlockItem ListBlockItem .          (rule 89)

	'}'            reduce using rule 89


State 152

	CompStmt -> '{' ListBlockItem '}' .                 (rule 87)

	'('            reduce using rule 87
	'*'            reduce using rule 87
	'++'           reduce using rule 87
	'--'           reduce using rule 87
	'break'        reduce using rule 87
	'continue'     reduce using rule 87
	'do'           reduce using rule 87
	'else'         reduce using rule 87
	'func'         reduce using rule 87
	'if'           reduce using rule 87
	'var'          reduce using rule 87
	'while'        reduce using rule 87
	'{'            reduce using rule 87
	'}'            reduce using rule 87
	L_Ident        reduce using rule 87
	%eof           reduce using rule 87


State 153

	Decl -> 'func' Ident '(' . ListParameter ')' CompStmt    (rule 68)

	')'            reduce using rule 70
	'var'          shift, and enter state 173

	ListParameter  goto state 171
	Parameter      goto state 172

State 154

	Decl -> 'var' VarSpec ';' .                         (rule 69)

	'func'         reduce using rule 69
	'var'          reduce using rule 69
	%eof           reduce using rule 69


State 155

	VarSpec -> Ident TypeSpec . '=' RExpr               (rule 74)
	VarSpec -> Ident TypeSpec .                         (rule 76)

	';'            reduce using rule 76
	'='            shift, and enter state 170


State 156

	TypeSpec -> BasicType .                             (rule 77)

	')'            reduce using rule 77
	','            reduce using rule 77
	';'            reduce using rule 77
	'='            reduce using rule 77


State 157

	TypeSpec -> CompoundType .                          (rule 78)

	')'            reduce using rule 78
	','            reduce using rule 78
	';'            reduce using rule 78
	'='            reduce using rule 78


State 158

	CompoundType -> '*' . TypeSpec                      (rule 86)

	'*'            shift, and enter state 158
	'['            shift, and enter state 160
	'bool'         shift, and enter state 161
	'char'         shift, and enter state 162
	'float'        shift, and enter state 163
	'int'          shift, and enter state 164
	'string'       shift, and enter state 165

	TypeSpec       goto state 169
	BasicType      goto state 156
	CompoundType   goto state 157

State 159

	VarSpec -> Ident '=' . RExpr                        (rule 75)

	'!'            shift, and enter state 37
	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'-'            shift, and enter state 40
	'--'           shift, and enter state 15
	'['            shift, and enter state 41
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 16
	Char           goto state 17
	Double         goto state 18
	Integer        goto state 19
	String         goto state 20
	Boolean        goto state 21
	RExpr          goto state 168
	RExpr1         goto state 23
	RExpr2         goto state 24
	RExpr3         goto state 25
	RExpr4         goto state 26
	RExpr5         goto state 27
	RExpr6         goto state 28
	RExpr7         goto state 29
	RExpr8         goto state 30
	RExpr9         goto state 31
	RExpr10        goto state 32
	RExpr11        goto state 33
	RExpr12        goto state 34
	FunCall        goto state 35
	LExpr          goto state 36
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11

State 160

	CompoundType -> '[' . Integer ']' TypeSpec          (rule 84)
	CompoundType -> '[' . ']' TypeSpec                  (rule 85)

	']'            shift, and enter state 167
	L_integ        shift, and enter state 46

	Integer        goto state 166

State 161

	BasicType -> 'bool' .                               (rule 79)

	')'            reduce using rule 79
	','            reduce using rule 79
	';'            reduce using rule 79
	'='            reduce using rule 79
	'{'            reduce using rule 79


State 162

	BasicType -> 'char' .                               (rule 80)

	')'            reduce using rule 80
	','            reduce using rule 80
	';'            reduce using rule 80
	'='            reduce using rule 80
	'{'            reduce using rule 80


State 163

	BasicType -> 'float' .                              (rule 81)

	')'            reduce using rule 81
	','            reduce using rule 81
	';'            reduce using rule 81
	'='            reduce using rule 81
	'{'            reduce using rule 81


State 164

	BasicType -> 'int' .                                (rule 82)

	')'            reduce using rule 82
	','            reduce using rule 82
	';'            reduce using rule 82
	'='            reduce using rule 82
	'{'            reduce using rule 82


State 165

	BasicType -> 'string' .                             (rule 83)

	')'            reduce using rule 83
	','            reduce using rule 83
	';'            reduce using rule 83
	'='            reduce using rule 83
	'{'            reduce using rule 83


State 166

	CompoundType -> '[' Integer . ']' TypeSpec          (rule 84)

	']'            shift, and enter state 193


State 167

	CompoundType -> '[' ']' . TypeSpec                  (rule 85)

	'*'            shift, and enter state 158
	'['            shift, and enter state 160
	'bool'         shift, and enter state 161
	'char'         shift, and enter state 162
	'float'        shift, and enter state 163
	'int'          shift, and enter state 164
	'string'       shift, and enter state 165

	TypeSpec       goto state 192
	BasicType      goto state 156
	CompoundType   goto state 157

State 168

	RExpr -> RExpr . '||' RExpr1                        (rule 12)
	VarSpec -> Ident '=' RExpr .                        (rule 75)

	';'            reduce using rule 75
	'||'           shift, and enter state 116


State 169

	CompoundType -> '*' TypeSpec .                      (rule 86)

	')'            reduce using rule 86
	','            reduce using rule 86
	';'            reduce using rule 86
	'='            reduce using rule 86


State 170

	VarSpec -> Ident TypeSpec '=' . RExpr               (rule 74)

	'!'            shift, and enter state 37
	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'-'            shift, and enter state 40
	'--'           shift, and enter state 15
	'['            shift, and enter state 41
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 16
	Char           goto state 17
	Double         goto state 18
	Integer        goto state 19
	String         goto state 20
	Boolean        goto state 21
	RExpr          goto state 191
	RExpr1         goto state 23
	RExpr2         goto state 24
	RExpr3         goto state 25
	RExpr4         goto state 26
	RExpr5         goto state 27
	RExpr6         goto state 28
	RExpr7         goto state 29
	RExpr8         goto state 30
	RExpr9         goto state 31
	RExpr10        goto state 32
	RExpr11        goto state 33
	RExpr12        goto state 34
	FunCall        goto state 35
	LExpr          goto state 36
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11

State 171

	Decl -> 'func' Ident '(' ListParameter . ')' CompStmt    (rule 68)

	')'            shift, and enter state 190


State 172

	ListParameter -> Parameter .                        (rule 71)
	ListParameter -> Parameter . ',' ListParameter      (rule 72)

	')'            reduce using rule 71
	','            shift, and enter state 189


State 173

	Parameter -> 'var' . Ident TypeSpec                 (rule 73)

	L_Ident        shift, and enter state 5

	Ident          goto state 188

State 174

	Decl -> 'var' VarSpec ';' .                         (rule 69)
	Stmt -> 'var' VarSpec ';' .                         (rule 101)

	'('            reduce using rule 101
			(reduce using rule 69)

	'*'            reduce using rule 101
			(reduce using rule 69)

	'++'           reduce using rule 101
			(reduce using rule 69)

	'--'           reduce using rule 101
			(reduce using rule 69)

	'break'        reduce using rule 101
			(reduce using rule 69)

	'continue'     reduce using rule 101
			(reduce using rule 69)

	'do'           reduce using rule 101
			(reduce using rule 69)

	'func'         reduce using rule 101
			(reduce using rule 69)

	'if'           reduce using rule 101
			(reduce using rule 69)

	'var'          reduce using rule 101
			(reduce using rule 69)

	'while'        reduce using rule 101
			(reduce using rule 69)

	'{'            reduce using rule 101
			(reduce using rule 69)

	'}'            reduce using rule 101
			(reduce using rule 69)

	L_Ident        reduce using rule 101
			(reduce using rule 69)



State 175

	IterStmt -> 'while' '(' RExpr ')' . Stmt            (rule 116)

	'('            shift, and enter state 12
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'--'           shift, and enter state 15
	'break'        shift, and enter state 56
	'continue'     shift, and enter state 57
	'do'           shift, and enter state 58
	'if'           shift, and enter state 59
	'var'          shift, and enter state 60
	'while'        shift, and enter state 61
	'{'            shift, and enter state 62
	L_Ident        shift, and enter state 5

	Ident          goto state 48
	FunCall        goto state 49
	LExpr          goto state 50
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11
	CompStmt       goto state 51
	Stmt           goto state 187
	JumpStmt       goto state 53
	SelectionStmt  goto state 54
	IterStmt       goto state 55

State 176

	SelectionStmt -> 'if' '(' RExpr ')' . Stmt          (rule 114)
	SelectionStmt -> 'if' '(' RExpr ')' . Stmt 'else' Stmt    (rule 115)

	'('            shift, and enter state 12
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'--'           shift, and enter state 15
	'break'        shift, and enter state 56
	'continue'     shift, and enter state 57
	'do'           shift, and enter state 58
	'if'           shift, and enter state 59
	'var'          shift, and enter state 60
	'while'        shift, and enter state 61
	'{'            shift, and enter state 62
	L_Ident        shift, and enter state 5

	Ident          goto state 48
	FunCall        goto state 49
	LExpr          goto state 50
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11
	CompStmt       goto state 51
	Stmt           goto state 186
	JumpStmt       goto state 53
	SelectionStmt  goto state 54
	IterStmt       goto state 55

State 177

	IterStmt -> 'do' Stmt 'while' '(' . RExpr ')' ';'    (rule 117)

	'!'            shift, and enter state 37
	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'-'            shift, and enter state 40
	'--'           shift, and enter state 15
	'['            shift, and enter state 41
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 16
	Char           goto state 17
	Double         goto state 18
	Integer        goto state 19
	String         goto state 20
	Boolean        goto state 21
	RExpr          goto state 185
	RExpr1         goto state 23
	RExpr2         goto state 24
	RExpr3         goto state 25
	RExpr4         goto state 26
	RExpr5         goto state 27
	RExpr6         goto state 28
	RExpr7         goto state 29
	RExpr8         goto state 30
	RExpr9         goto state 31
	RExpr10        goto state 32
	RExpr11        goto state 33
	RExpr12        goto state 34
	FunCall        goto state 35
	LExpr          goto state 36
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11

State 178

	Stmt -> LExpr Assignment_op RExpr ';' .             (rule 99)

	'('            reduce using rule 99
	'*'            reduce using rule 99
	'++'           reduce using rule 99
	'--'           reduce using rule 99
	'break'        reduce using rule 99
	'continue'     reduce using rule 99
	'do'           reduce using rule 99
	'else'         reduce using rule 99
	'func'         reduce using rule 99
	'if'           reduce using rule 99
	'var'          reduce using rule 99
	'while'        reduce using rule 99
	'{'            reduce using rule 99
	'}'            reduce using rule 99
	L_Ident        reduce using rule 99
	%eof           reduce using rule 99


State 179

	FunCall -> Ident '(' ListRExpr ')' .                (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	']'            reduce using rule 49
	'^'            reduce using rule 49
	'||'           reduce using rule 49
	'}'            reduce using rule 49
	%eof           reduce using rule 49


State 180

	ListRExpr -> RExpr ',' . ListRExpr                  (rule 52)

	'!'            shift, and enter state 37
	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	')'            reduce using rule 50
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'-'            shift, and enter state 40
	'--'           shift, and enter state 15
	'['            shift, and enter state 41
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	'}'            reduce using rule 50
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 16
	Char           goto state 17
	Double         goto state 18
	Integer        goto state 19
	String         goto state 20
	Boolean        goto state 21
	RExpr          goto state 143
	RExpr1         goto state 23
	RExpr2         goto state 24
	RExpr3         goto state 25
	RExpr4         goto state 26
	RExpr5         goto state 27
	RExpr6         goto state 28
	RExpr7         goto state 29
	RExpr8         goto state 30
	RExpr9         goto state 31
	RExpr10        goto state 32
	RExpr11        goto state 33
	RExpr12        goto state 34
	FunCall        goto state 35
	ListRExpr      goto state 184
	LExpr          goto state 36
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11

State 181

	BLExpr -> Ident '[' RExpr ']' .                     (rule 63)

	'!='           reduce using rule 63
	'%'            reduce using rule 63
	'&&'           reduce using rule 63
	'&='           reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'*='           reduce using rule 63
	'+'            reduce using rule 63
	'+='           reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'-='           reduce using rule 63
	'/'            reduce using rule 63
	'/='           reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'='            reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	']'            reduce using rule 63
	'^'            reduce using rule 63
	'^='           reduce using rule 63
	'|='           reduce using rule 63
	'||'           reduce using rule 63
	'}'            reduce using rule 63
	%eof           reduce using rule 63


State 182

	RExpr9 -> '[' Integer ']' BasicType . '{' ListRExpr '}'    (rule 44)

	'{'            shift, and enter state 183


State 183

	RExpr9 -> '[' Integer ']' BasicType '{' . ListRExpr '}'    (rule 44)

	'!'            shift, and enter state 37
	'&'            shift, and enter state 38
	'('            shift, and enter state 39
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'-'            shift, and enter state 40
	'--'           shift, and enter state 15
	'['            shift, and enter state 41
	'false'        shift, and enter state 42
	'true'         shift, and enter state 43
	'}'            reduce using rule 50
	L_Ident        shift, and enter state 5
	L_charac       shift, and enter state 44
	L_doubl        shift, and enter state 45
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 16
	Char           goto state 17
	Double         goto state 18
	Integer        goto state 19
	String         goto state 20
	Boolean        goto state 21
	RExpr          goto state 143
	RExpr1         goto state 23
	RExpr2         goto state 24
	RExpr3         goto state 25
	RExpr4         goto state 26
	RExpr5         goto state 27
	RExpr6         goto state 28
	RExpr7         goto state 29
	RExpr8         goto state 30
	RExpr9         goto state 31
	RExpr10        goto state 32
	RExpr11        goto state 33
	RExpr12        goto state 34
	FunCall        goto state 35
	ListRExpr      goto state 200
	LExpr          goto state 36
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11

State 184

	ListRExpr -> RExpr ',' ListRExpr .                  (rule 52)

	')'            reduce using rule 52
	'}'            reduce using rule 52


State 185

	RExpr -> RExpr . '||' RExpr1                        (rule 12)
	IterStmt -> 'do' Stmt 'while' '(' RExpr . ')' ';'    (rule 117)

	')'            shift, and enter state 199
	'||'           shift, and enter state 116


State 186

	SelectionStmt -> 'if' '(' RExpr ')' Stmt .          (rule 114)
	SelectionStmt -> 'if' '(' RExpr ')' Stmt . 'else' Stmt    (rule 115)

	'('            reduce using rule 114
	'*'            reduce using rule 114
	'++'           reduce using rule 114
	'--'           reduce using rule 114
	'break'        reduce using rule 114
	'continue'     reduce using rule 114
	'do'           reduce using rule 114
	'else'         shift, and enter state 198
			(reduce using rule 114)

	'func'         reduce using rule 114
	'if'           reduce using rule 114
	'var'          reduce using rule 114
	'while'        reduce using rule 114
	'{'            reduce using rule 114
	'}'            reduce using rule 114
	L_Ident        reduce using rule 114
	%eof           reduce using rule 114


State 187

	IterStmt -> 'while' '(' RExpr ')' Stmt .            (rule 116)

	'('            reduce using rule 116
	'*'            reduce using rule 116
	'++'           reduce using rule 116
	'--'           reduce using rule 116
	'break'        reduce using rule 116
	'continue'     reduce using rule 116
	'do'           reduce using rule 116
	'else'         reduce using rule 116
	'func'         reduce using rule 116
	'if'           reduce using rule 116
	'var'          reduce using rule 116
	'while'        reduce using rule 116
	'{'            reduce using rule 116
	'}'            reduce using rule 116
	L_Ident        reduce using rule 116
	%eof           reduce using rule 116


State 188

	Parameter -> 'var' Ident . TypeSpec                 (rule 73)

	'*'            shift, and enter state 158
	'['            shift, and enter state 160
	'bool'         shift, and enter state 161
	'char'         shift, and enter state 162
	'float'        shift, and enter state 163
	'int'          shift, and enter state 164
	'string'       shift, and enter state 165

	TypeSpec       goto state 197
	BasicType      goto state 156
	CompoundType   goto state 157

State 189

	ListParameter -> Parameter ',' . ListParameter      (rule 72)

	')'            reduce using rule 70
	'var'          shift, and enter state 173

	ListParameter  goto state 196
	Parameter      goto state 172

State 190

	Decl -> 'func' Ident '(' ListParameter ')' . CompStmt    (rule 68)

	'{'            shift, and enter state 62

	CompStmt       goto state 195

State 191

	RExpr -> RExpr . '||' RExpr1                        (rule 12)
	VarSpec -> Ident TypeSpec '=' RExpr .               (rule 74)

	';'            reduce using rule 74
	'||'           shift, and enter state 116


State 192

	CompoundType -> '[' ']' TypeSpec .                  (rule 85)

	')'            reduce using rule 85
	','            reduce using rule 85
	';'            reduce using rule 85
	'='            reduce using rule 85


State 193

	CompoundType -> '[' Integer ']' . TypeSpec          (rule 84)

	'*'            shift, and enter state 158
	'['            shift, and enter state 160
	'bool'         shift, and enter state 161
	'char'         shift, and enter state 162
	'float'        shift, and enter state 163
	'int'          shift, and enter state 164
	'string'       shift, and enter state 165

	TypeSpec       goto state 194
	BasicType      goto state 156
	CompoundType   goto state 157

State 194

	CompoundType -> '[' Integer ']' TypeSpec .          (rule 84)

	')'            reduce using rule 84
	','            reduce using rule 84
	';'            reduce using rule 84
	'='            reduce using rule 84


State 195

	Decl -> 'func' Ident '(' ListParameter ')' CompStmt .    (rule 68)

	'('            reduce using rule 68
	'*'            reduce using rule 68
	'++'           reduce using rule 68
	'--'           reduce using rule 68
	'break'        reduce using rule 68
	'continue'     reduce using rule 68
	'do'           reduce using rule 68
	'func'         reduce using rule 68
	'if'           reduce using rule 68
	'var'          reduce using rule 68
	'while'        reduce using rule 68
	'{'            reduce using rule 68
	'}'            reduce using rule 68
	L_Ident        reduce using rule 68
	%eof           reduce using rule 68


State 196

	ListParameter -> Parameter ',' ListParameter .      (rule 72)

	')'            reduce using rule 72


State 197

	Parameter -> 'var' Ident TypeSpec .                 (rule 73)

	')'            reduce using rule 73
	','            reduce using rule 73


State 198

	SelectionStmt -> 'if' '(' RExpr ')' Stmt 'else' . Stmt    (rule 115)

	'('            shift, and enter state 12
	'*'            shift, and enter state 13
	'++'           shift, and enter state 14
	'--'           shift, and enter state 15
	'break'        shift, and enter state 56
	'continue'     shift, and enter state 57
	'do'           shift, and enter state 58
	'if'           shift, and enter state 59
	'var'          shift, and enter state 60
	'while'        shift, and enter state 61
	'{'            shift, and enter state 62
	L_Ident        shift, and enter state 5

	Ident          goto state 48
	FunCall        goto state 49
	LExpr          goto state 50
	LExpr1         goto state 8
	LExpr2         goto state 9
	LExpr3         goto state 10
	BLExpr         goto state 11
	CompStmt       goto state 51
	Stmt           goto state 203
	JumpStmt       goto state 53
	SelectionStmt  goto state 54
	IterStmt       goto state 55

State 199

	IterStmt -> 'do' Stmt 'while' '(' RExpr ')' . ';'    (rule 117)

	';'            shift, and enter state 202


State 200

	RExpr9 -> '[' Integer ']' BasicType '{' ListRExpr . '}'    (rule 44)

	'}'            shift, and enter state 201


State 201

	RExpr9 -> '[' Integer ']' BasicType '{' ListRExpr '}' .    (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	'&='           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'*='           reduce using rule 44
	'+'            reduce using rule 44
	'+='           reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'-='           reduce using rule 44
	'/'            reduce using rule 44
	'/='           reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'='            reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	']'            reduce using rule 44
	'^'            reduce using rule 44
	'^='           reduce using rule 44
	'|='           reduce using rule 44
	'||'           reduce using rule 44
	'}'            reduce using rule 44
	%eof           reduce using rule 44


State 202

	IterStmt -> 'do' Stmt 'while' '(' RExpr ')' ';' .    (rule 117)

	'('            reduce using rule 117
	'*'            reduce using rule 117
	'++'           reduce using rule 117
	'--'           reduce using rule 117
	'break'        reduce using rule 117
	'continue'     reduce using rule 117
	'do'           reduce using rule 117
	'else'         reduce using rule 117
	'func'         reduce using rule 117
	'if'           reduce using rule 117
	'var'          reduce using rule 117
	'while'        reduce using rule 117
	'{'            reduce using rule 117
	'}'            reduce using rule 117
	L_Ident        reduce using rule 117
	%eof           reduce using rule 117


State 203

	SelectionStmt -> 'if' '(' RExpr ')' Stmt 'else' Stmt .    (rule 115)

	'('            reduce using rule 115
	'*'            reduce using rule 115
	'++'           reduce using rule 115
	'--'           reduce using rule 115
	'break'        reduce using rule 115
	'continue'     reduce using rule 115
	'do'           reduce using rule 115
	'else'         reduce using rule 115
	'func'         reduce using rule 115
	'if'           reduce using rule 115
	'var'          reduce using rule 115
	'while'        reduce using rule 115
	'{'            reduce using rule 115
	'}'            reduce using rule 115
	L_Ident        reduce using rule 115
	%eof           reduce using rule 115


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 118
Number of terminals: 54
Number of non-terminals: 48
Number of states: 204
